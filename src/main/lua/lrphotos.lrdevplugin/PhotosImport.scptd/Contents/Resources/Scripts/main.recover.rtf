{\rtf1\ansi\ansicpg1252\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 JetBrainsMono-Italic;\f1\fnil\fcharset0 JetBrainsMono-Regular;\f2\fnil\fcharset0 JetBrainsMono-Bold;
}
{\colortbl;\red255\green255\blue255;\red73\green123\blue61;\red152\green168\blue186;\red193\green100\blue30;
\red158\green128\blue255;\red193\green62\blue29;\red91\green144\blue62;\red193\green43\blue12;\red152\green168\blue186;
\red193\green43\blue12;\red10\green112\blue204;}
{\*\expandedcolortbl;;\csgenericrgb\c28670\c48057\c23743;\csgenericrgb\c59779\c65774\c73089;\csgenericrgb\c75640\c39311\c11952;
\csgenericrgb\c62067\c50000\c100000;\csgenericrgb\c75599\c24494\c11327;\csgenericrgb\c35846\c56374\c24421;\csgenericrgb\c75530\c16821\c4679;\csgenericrgb\c59787\c65770\c73100;
\csgenericrgb\c75504\c16712\c4745;\csgenericrgb\c3954\c44020\c79895;}
\deftab480
\pard\pardeftab480\slleading40\pardirnatural\partightenfactor0

\f0\i\fs26 \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \
\pard\pardeftab480\slleading40\pardirnatural\partightenfactor0

\f0\i \cf2 -- Initial created by Simon Schoeters in 2011
\f1\i0 \cf3 \

\f0\i \cf2 --
\f1\i0 \cf3 \

\f0\i \cf2 -- 29.05.2021. Dieter Stockhausen. Add publishing functionality
\f1\i0 \cf3 \

\f0\i \cf2 --
\f1\i0 \cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \
\cf4 use\cf3  \cf5 AppleScript\cf3  \cf6 version\cf3  \cf7 "2.4"\cf3  
\f0\i \cf2 -- Yosemite (10.10) or later
\f1\i0 \cf3 \
\cf4 use\cf3  
\f0\i \cf8 scripting additions
\f1\i0 \cf3 \
\cf4 use\cf3  
\f0\i \cf8 framework
\f1\i0 \cf3  \cf7 "Foundation"\cf3 \
\

\f0\i \cf2 -- classes, constants, and enums used
\f1\i0 \cf3 \
\cf4 property\cf3  \cf3 NSRegularExpressionSearch\cf3  : \cf4 a reference\cf3  \cf4 to\cf3  \cf9 1024\cf3 \
\cf4 property\cf3  \cf3 inputEncoding\cf3  : \cf7 "UTF-8"\cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \

\f0\i \cf2 -- Extract the album name from the session file
\f1\i0 \cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \
\cf4 on\cf3  \cf10 getAlbumName\cf3 (\cf3 sessionContents\cf3 )\
	\cf4 set\cf3  \cf3 albumName\cf3  \cf4 to\cf3  \cf7 ""\cf3 \
	\cf4 set\cf3  \cf3 allLines\cf3  \cf4 to\cf3  \cf4 every\cf3  
\f0\i \cf8 paragraph
\f1\i0 \cf3  \cf4 of\cf3  \cf3 sessionContents\cf3 \
	\cf4 repeat\cf3  \cf4 with\cf3  \cf3 aLine\cf3  \cf4 in\cf3  \cf3 allLines\cf3 \
		\cf4 set\cf3  \cf3 equalSignOffset\cf3  \cf4 to\cf3  (\cf11 offset\cf3  \cf11 of\cf3  \cf7 "="\cf3  \cf11 in\cf3  \cf3 aLine\cf3 )\
		\cf4 if\cf3  \cf3 equalSignOffset\cf3  > \cf9 0\cf3  \cf4 then\cf3 \
			\cf4 set\cf3  \cf3 var\cf3  \cf4 to\cf3  
\f0\i \cf8 text
\f1\i0 \cf3  \cf9 1\cf3  \cf4 thru\cf3  (\cf3 equalSignOffset\cf3  - \cf9 1\cf3 ) \cf4 of\cf3  \cf3 aLine\cf3 \
			\cf4 if\cf3  \cf3 var\cf3  = \cf7 "albumName"\cf3  \cf4 then\cf3 \
				\cf4 set\cf3  \cf3 len\cf3  \cf4 to\cf3  \cf4 the\cf3  \cf5 length\cf3  \cf4 of\cf3  \cf3 aLine\cf3 \
				\cf4 if\cf3  \cf3 len\cf3  \cf4 is\cf3  \cf4 greater than\cf3  \cf3 equalSignOffset\cf3  \cf4 then\cf3 \
					\cf4 set\cf3  \cf3 albumName\cf3  \cf4 to\cf3  
\f0\i \cf8 text
\f1\i0 \cf3  ((\cf11 offset\cf3  \cf11 of\cf3  \cf7 "="\cf3  \cf11 in\cf3  \cf3 aLine\cf3 ) + \cf9 1\cf3 ) \cf4 thru\cf3  \cf9 -1\cf3  \cf4 of\cf3  \cf3 aLine\cf3 \
				\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
	\cf4 end\cf3  \cf4 repeat\cf3 \
	\cf4 return\cf3  \cf3 albumName\cf3 \
\cf4 end\cf3  \cf10 getAlbumName\cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \

\f0\i \cf2 --
\f1\i0 \cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \
\cf4 on\cf3  \cf10 getIgnoreRegex\cf3 (\cf3 sessionContents\cf3 )\
	\cf4 set\cf3  \cf3 ignoreByRegex\cf3  \cf4 to\cf3  \cf7 ""\cf3 \
	\cf4 set\cf3  \cf3 allLines\cf3  \cf4 to\cf3  \cf4 every\cf3  
\f0\i \cf8 paragraph
\f1\i0 \cf3  \cf4 of\cf3  \cf3 sessionContents\cf3 \
	\cf4 repeat\cf3  \cf4 with\cf3  \cf3 aLine\cf3  \cf4 in\cf3  \cf3 allLines\cf3 \
		\cf4 set\cf3  \cf3 equalSignOffset\cf3  \cf4 to\cf3  (\cf11 offset\cf3  \cf11 of\cf3  \cf7 "="\cf3  \cf11 in\cf3  \cf3 aLine\cf3 )\
		\cf4 if\cf3  \cf3 equalSignOffset\cf3  > \cf9 0\cf3  \cf4 then\cf3 \
			\cf4 set\cf3  \cf3 var\cf3  \cf4 to\cf3  
\f0\i \cf8 text
\f1\i0 \cf3  \cf9 1\cf3  \cf4 thru\cf3  (\cf3 equalSignOffset\cf3  - \cf9 1\cf3 ) \cf4 of\cf3  \cf3 aLine\cf3 \
			\cf4 if\cf3  \cf3 var\cf3  = \cf7 "ignoreByRegex"\cf3  \cf4 then\cf3 \
				\cf4 set\cf3  \cf3 len\cf3  \cf4 to\cf3  \cf4 the\cf3  \cf5 length\cf3  \cf4 of\cf3  \cf3 aLine\cf3 \
				\cf4 if\cf3  \cf3 len\cf3  \cf4 is\cf3  \cf4 greater than\cf3  \cf3 equalSignOffset\cf3  \cf4 then\cf3 \
					\cf4 set\cf3  \cf3 ignoreByRegex\cf3  \cf4 to\cf3  
\f0\i \cf8 text
\f1\i0 \cf3  ((\cf11 offset\cf3  \cf11 of\cf3  \cf7 "="\cf3  \cf11 in\cf3  \cf3 aLine\cf3 ) + \cf9 1\cf3 ) \cf4 thru\cf3  \cf9 -1\cf3  \cf4 of\cf3  \cf3 aLine\cf3 \
				\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
	\cf4 end\cf3  \cf4 repeat\cf3 \
	\cf4 return\cf3  \cf3 ignoreByRegex\cf3 \
\cf4 end\cf3  \cf10 getIgnoreRegex\cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \

\f0\i \cf2 --
\f1\i0 \cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \
\cf4 on\cf3  \cf10 getMode\cf3 (\cf3 sessionContents\cf3 )\
	\cf4 set\cf3  \cf3 mode\cf3  \cf4 to\cf3  \cf7 ""\cf3 \
	\cf4 set\cf3  \cf3 allLines\cf3  \cf4 to\cf3  \cf4 every\cf3  
\f0\i \cf8 paragraph
\f1\i0 \cf3  \cf4 of\cf3  \cf3 sessionContents\cf3 \
	\cf4 repeat\cf3  \cf4 with\cf3  \cf3 aLine\cf3  \cf4 in\cf3  \cf3 allLines\cf3 \
		\cf4 set\cf3  \cf3 equalSignOffset\cf3  \cf4 to\cf3  (\cf11 offset\cf3  \cf11 of\cf3  \cf7 "="\cf3  \cf11 in\cf3  \cf3 aLine\cf3 )\
		\cf4 if\cf3  \cf3 equalSignOffset\cf3  > \cf9 0\cf3  \cf4 then\cf3 \
			\cf4 set\cf3  \cf3 var\cf3  \cf4 to\cf3  
\f0\i \cf8 text
\f1\i0 \cf3  \cf9 1\cf3  \cf4 thru\cf3  (\cf3 equalSignOffset\cf3  - \cf9 1\cf3 ) \cf4 of\cf3  \cf3 aLine\cf3 \
			\cf4 if\cf3  \cf3 var\cf3  = \cf7 "mode"\cf3  \cf4 then\cf3 \
				\cf4 set\cf3  \cf3 len\cf3  \cf4 to\cf3  \cf4 the\cf3  \cf5 length\cf3  \cf4 of\cf3  \cf3 aLine\cf3 \
				\cf4 if\cf3  \cf3 len\cf3  \cf4 is\cf3  \cf4 greater than\cf3  \cf3 equalSignOffset\cf3  \cf4 then\cf3 \
					\cf4 set\cf3  \cf3 mode\cf3  \cf4 to\cf3  
\f0\i \cf8 text
\f1\i0 \cf3  ((\cf11 offset\cf3  \cf11 of\cf3  \cf7 "="\cf3  \cf11 in\cf3  \cf3 aLine\cf3 ) + \cf9 1\cf3 ) \cf4 thru\cf3  \cf9 -1\cf3  \cf4 of\cf3  \cf3 aLine\cf3 \
				\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
	\cf4 end\cf3  \cf4 repeat\cf3 \
	\cf4 return\cf3  \cf3 mode\cf3 \
\cf4 end\cf3  \cf10 getMode\cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \

\f0\i \cf2 --
\f1\i0 \cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \
\cf4 on\cf3  \cf10 getSession\cf3 (\cf3 sessionContents\cf3 )\
	\cf4 local\cf3  \cf3 session\cf3 \
	\cf4 set\cf3  \cf3 session\cf3  \cf4 to\cf3  \{\cf3 mode\cf3 :\cf7 ""\cf3 , \cf3 albumName\cf3 :\cf7 ""\cf3 , \cf3 ignoreByRegex\cf3 :\cf7 ""\cf3 , \cf3 hasErrors\cf3 :\cf5 false\cf3 , \cf3 errorMsg\cf3 :\cf7 ""\cf3 , \cf3 exportDone\cf3 :\cf5 false\cf3 , \cf3 keepOldPhotos\cf3 :\cf5 true\cf3 \} \cf4 as\cf3  
\f0\i \cf8 record
\f1\i0 \cf3 \
	\cf4 local\cf3  \cf3 allLines\cf3 \
	\cf4 set\cf3  \cf3 allLines\cf3  \cf4 to\cf3  \cf4 every\cf3  
\f0\i \cf8 paragraph
\f1\i0 \cf3  \cf4 of\cf3  \cf3 sessionContents\cf3 \
	\cf4 repeat\cf3  \cf4 with\cf3  \cf3 aLine\cf3  \cf4 in\cf3  \cf3 allLines\cf3 \
		\cf4 set\cf3  \cf3 equalSignOffset\cf3  \cf4 to\cf3  (\cf11 offset\cf3  \cf11 of\cf3  \cf7 "="\cf3  \cf11 in\cf3  \cf3 aLine\cf3 )\
		\cf4 if\cf3  \cf3 equalSignOffset\cf3  > \cf9 0\cf3  \cf4 then\cf3 \
			
\f0\i \cf2 -- get the value
\f1\i0 \cf3 \
			\cf4 set\cf3  \cf3 len\cf3  \cf4 to\cf3  \cf4 the\cf3  \cf5 length\cf3  \cf4 of\cf3  \cf3 aLine\cf3 \
			\cf4 if\cf3  \cf3 len\cf3  \cf4 is\cf3  \cf4 greater than\cf3  \cf3 equalSignOffset\cf3  \cf4 then\cf3 \
				\cf4 set\cf3  \cf3 value\cf3  \cf4 to\cf3  
\f0\i \cf8 text
\f1\i0 \cf3  ((\cf11 offset\cf3  \cf11 of\cf3  \cf7 "="\cf3  \cf11 in\cf3  \cf3 aLine\cf3 ) + \cf9 1\cf3 ) \cf4 thru\cf3  \cf9 -1\cf3  \cf4 of\cf3  \cf3 aLine\cf3 \
			\cf4 else\cf3 \
				\cf4 set\cf3  \cf3 value\cf3  \cf4 to\cf3  \cf7 ""\cf3 \
			\cf4 end\cf3  \cf4 if\cf3 \
			
\f0\i \cf2 -- get the key
\f1\i0 \cf3 \
			\cf4 set\cf3  \cf3 aKey\cf3  \cf4 to\cf3  
\f0\i \cf8 text
\f1\i0 \cf3  \cf9 1\cf3  \cf4 thru\cf3  (\cf3 equalSignOffset\cf3  - \cf9 1\cf3 ) \cf4 of\cf3  \cf3 aLine\cf3 \
			\cf4 if\cf3  \cf3 aKey\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf7 "mode"\cf3  \cf4 then\cf3 \
				\cf4 set\cf3  \cf3 mode\cf3  \cf4 of\cf3  \cf3 session\cf3  \cf4 to\cf3  \cf3 value\cf3 \
			\cf4 else\cf3 \
				\cf4 if\cf3  \cf3 aKey\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf7 "albumName"\cf3  \cf4 then\cf3 \
					\cf4 set\cf3  \cf3 albumName\cf3  \cf4 of\cf3  \cf3 session\cf3  \cf4 to\cf3  \cf3 value\cf3 \
				\cf4 else\cf3 \
					\cf4 if\cf3  \cf3 aKey\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf7 "ignoreByRegex"\cf3  \cf4 then\cf3 \
						\cf4 set\cf3  \cf3 ignoreByRegex\cf3  \cf4 of\cf3  \cf3 session\cf3  \cf4 to\cf3  \cf3 value\cf3 \
					\cf4 else\cf3 \
						\cf4 if\cf3  \cf3 aKey\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf7 "hasError"\cf3  \cf4 then\cf3 \
							\cf4 set\cf3  \cf3 hasErrors\cf3  \cf4 of\cf3  \cf3 session\cf3  \cf4 to\cf3  \cf3 value\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf7 "true"\cf3 \
						\cf4 else\cf3 \
							\cf4 if\cf3  \cf3 aKey\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf7 "errorMsg"\cf3  \cf4 then\cf3 \
								\cf4 set\cf3  \cf3 errorMsg\cf3  \cf4 of\cf3  \cf3 session\cf3  \cf4 to\cf3  \cf3 value\cf3 \
							\cf4 else\cf3 \
								\cf4 if\cf3  \cf3 aKey\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf7 "exportDone"\cf3  \cf4 then\cf3 \
									\cf4 set\cf3  \cf3 exportDone\cf3  \cf4 of\cf3  \cf3 session\cf3  \cf4 to\cf3  \cf3 value\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf7 "true"\cf3 \
								\cf4 else\cf3 \
									\cf4 if\cf3  \cf3 aKey\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf7 "keepOldPhotos"\cf3  \cf4 then\cf3 \
										\cf4 set\cf3  \cf3 keepOldPhotos\cf3  \cf4 of\cf3  \cf3 session\cf3  \cf4 to\cf3  \cf3 value\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf7 "true"\cf3 \
									\cf4 end\cf3  \cf4 if\cf3 \
								\cf4 end\cf3  \cf4 if\cf3 \
							\cf4 end\cf3  \cf4 if\cf3 \
						\cf4 end\cf3  \cf4 if\cf3 \
					\cf4 end\cf3  \cf4 if\cf3 \
				\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
	\cf4 end\cf3  \cf4 repeat\cf3 \
	\cf4 return\cf3  \cf3 session\cf3 \
\cf4 end\cf3  \cf10 getSession\cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \

\f0\i \cf2 -- Extract the photo descriptors from the photos file
\f1\i0 \cf3 \

\f0\i \cf2 -- Format is:
\f1\i0 \cf3 \

\f0\i \cf2 --   image posix file path : LR photo uuid : name of LR catalog file : Photos photo ID
\f1\i0 \cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \
\cf4 on\cf3  \cf10 getPhotoDescriptors\cf3 (\cf3 photosContents\cf3 )\
	\cf4 set\cf3  \cf3 photos\cf3  \cf4 to\cf3  \{\}\
	\cf4 set\cf3  \cf3 allLines\cf3  \cf4 to\cf3  \cf4 every\cf3  
\f0\i \cf8 paragraph
\f1\i0 \cf3  \cf4 of\cf3  \cf3 photosContents\cf3 \
	\cf4 repeat\cf3  \cf4 with\cf3  \cf3 aLine\cf3  \cf4 in\cf3  \cf3 allLines\cf3 \
		\cf4 set\cf3  \cf3 aLine\cf3  \cf4 to\cf3  \cf10 trimThis\cf3 (\cf3 aLine\cf3 , \cf5 true\cf3 , \cf5 true\cf3 )\
		
\f2\b \cf6 log
\f1\b0 \cf3  \cf3 aLine\cf3 \
		\cf4 if\cf3  \cf3 aLine\cf3  \cf4 is not\cf3  \cf4 equal to\cf3  \cf7 ""\cf3  \cf4 then\cf3 \
			\cf4 copy\cf3  \cf3 aLine\cf3  \cf4 to\cf3  \cf4 the\cf3  \cf4 end\cf3  \cf4 of\cf3  \cf3 photos\cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
	\cf4 end\cf3  \cf4 repeat\cf3 \
	\cf4 return\cf3  \cf3 photos\cf3 \
\cf4 end\cf3  \cf10 getPhotoDescriptors\cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \

\f0\i \cf2 -- matchesRegex
\f1\i0 \cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \
\cf4 on\cf3  \cf10 matchesRegex\cf3 (\cf3 theText\cf3 , \cf3 theRegex\cf3 )\
	\cf4 set\cf3  \cf3 theText\cf3  \cf4 to\cf3  \cf5 current application's\cf3  \cf3 NSString's\cf3  \cf10 stringWithString\cf3 :\cf3 theText\cf3 \
	\cf4 set\cf3  \cf3 theRange\cf3  \cf4 to\cf3  \cf3 theText's\cf3  \cf10 rangeOfString\cf3 :(\cf3 theRegex\cf3 ) \cf10 options\cf3 :\cf3 NSRegularExpressionSearch\cf3 \
	\cf4 if\cf3  \cf3 |length|\cf3  \cf4 of\cf3  \cf3 theRange\cf3  \cf4 is\cf3  \cf4 greater than\cf3  \cf9 0\cf3  \cf4 then\cf3 \
		\cf4 return\cf3  \cf5 true\cf3 \
	\cf4 else\cf3 \
		\cf4 return\cf3  \cf5 false\cf3 \
	\cf4 end\cf3  \cf4 if\cf3 \
\cf4 end\cf3  \cf10 matchesRegex\cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \

\f0\i \cf2 --
\f1\i0 \cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \
\cf4 on\cf3  \cf10 trimThis\cf3 (\cf3 pstrSourceText\cf3 , \cf3 pstrCharToTrim\cf3 , \cf3 pstrTrimDirection\cf3 )\
	
\f0\i \cf2 -- http://macscripter.net/viewtopic.php?id=18519
\f1\i0 \cf3 \
	
\f0\i \cf2 -- pstrSourceText : The text to be trimmed
\f1\i0 \cf3 \
	
\f0\i \cf2 -- pstrCharToTrim     : A list of characters to trim, or true to use default
\f1\i0 \cf3 \
	
\f0\i \cf2 -- pstrTrimDirection : Direction of Trim left, right or any value for full
\f1\i0 \cf3 \
	\
	\cf4 set\cf3  \cf3 strTrimedText\cf3  \cf4 to\cf3  \cf3 pstrSourceText\cf3 \
	\
	
\f0\i \cf2 -- If undefinied use default whitespaces
\f1\i0 \cf3 \
	\cf4 if\cf3  \cf3 pstrCharToTrim\cf3  \cf4 is\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3  \cf4 or\cf3  
\f0\i \cf8 class
\f1\i0 \cf3  \cf4 of\cf3  \cf3 pstrCharToTrim\cf3  \cf4 is\cf3  \cf4 not\cf3  
\f0\i \cf8 list
\f1\i0 \cf3  \cf4 then\cf3 \
		
\f0\i \cf2 -- trim tab, newline, return and all the unicode characters from the 'separator space' category
\f1\i0 \cf3 \
		
\f0\i \cf2 -- [url]http://www.fileformat.info/info/unicode/category/Zs/list.htm[/url]
\f1\i0 \cf3 \
		\cf4 set\cf3  \cf3 pstrCharToTrim\cf3  \cf4 to\cf3  \{\cf5 tab\cf3 , \cf5 linefeed\cf3 , \cf5 return\cf3 , \cf5 space\cf3 , 
\f0\i \cf8 character
\f1\i0 \cf3  \cf5 id\cf3  \cf9 160\cf3 , 
\f0\i \cf8 character
\f1\i0 \cf3  \cf5 id\cf3  \cf9 5760\cf3 , 
\f0\i \cf8 character
\f1\i0 \cf3  \cf5 id\cf3  \cf9 8192\cf3 , 
\f0\i \cf8 character
\f1\i0 \cf3  \cf5 id\cf3  \cf9 8193\cf3 , 
\f0\i \cf8 character
\f1\i0 \cf3  \cf5 id\cf3  \cf9 8194\cf3 , 
\f0\i \cf8 character
\f1\i0 \cf3  \cf5 id\cf3  \cf9 8195\cf3 , 
\f0\i \cf8 character
\f1\i0 \cf3  \cf5 id\cf3  \cf9 8196\cf3 , 
\f0\i \cf8 character
\f1\i0 \cf3  \cf5 id\cf3  \cf9 8197\cf3 , 
\f0\i \cf8 character
\f1\i0 \cf3  \cf5 id\cf3  \cf9 8198\cf3 , 
\f0\i \cf8 character
\f1\i0 \cf3  \cf5 id\cf3  \cf9 8199\cf3 , 
\f0\i \cf8 character
\f1\i0 \cf3  \cf5 id\cf3  \cf9 8200\cf3 , 
\f0\i \cf8 character
\f1\i0 \cf3  \cf5 id\cf3  \cf9 8201\cf3 , 
\f0\i \cf8 character
\f1\i0 \cf3  \cf5 id\cf3  \cf9 8202\cf3 , 
\f0\i \cf8 character
\f1\i0 \cf3  \cf5 id\cf3  \cf9 8239\cf3 , 
\f0\i \cf8 character
\f1\i0 \cf3  \cf5 id\cf3  \cf9 8287\cf3 , 
\f0\i \cf8 character
\f1\i0 \cf3  \cf5 id\cf3  \cf9 12288\cf3 \}\
	\cf4 end\cf3  \cf4 if\cf3 \
	\
	\cf4 set\cf3  \cf3 lLoc\cf3  \cf4 to\cf3  \cf9 1\cf3 \
	\cf4 set\cf3  \cf3 rLoc\cf3  \cf4 to\cf3  
\f2\b \cf6 count
\f1\b0 \cf3  \cf4 of\cf3  \cf3 strTrimedText\cf3 \
	\
	
\f0\i \cf2 --- From left to right, get location of first non-whitespace character
\f1\i0 \cf3 \
	\cf4 if\cf3  \cf3 pstrTrimDirection\cf3  \cf4 is\cf3  \cf4 not\cf3  \cf5 right\cf3  \cf4 then\cf3 \
		\cf4 repeat\cf3  \cf4 until\cf3  \cf3 lLoc\cf3  = (\cf3 rLoc\cf3  + \cf9 1\cf3 ) \cf4 or\cf3  
\f0\i \cf8 character
\f1\i0 \cf3  \cf3 lLoc\cf3  \cf4 of\cf3  \cf3 strTrimedText\cf3  \cf4 is not\cf3  \cf4 in\cf3  \cf3 pstrCharToTrim\cf3 \
			\cf4 set\cf3  \cf3 lLoc\cf3  \cf4 to\cf3  \cf3 lLoc\cf3  + \cf9 1\cf3 \
		\cf4 end\cf3  \cf4 repeat\cf3 \
	\cf4 end\cf3  \cf4 if\cf3 \
	\
	
\f0\i \cf2 -- From right to left, get location of first non-whitespace character
\f1\i0 \cf3 \
	\cf4 if\cf3  \cf3 pstrTrimDirection\cf3  \cf4 is\cf3  \cf4 not\cf3  \cf5 left\cf3  \cf4 then\cf3 \
		\cf4 repeat\cf3  \cf4 until\cf3  \cf3 rLoc\cf3  = \cf9 0\cf3  \cf4 or\cf3  
\f0\i \cf8 character
\f1\i0 \cf3  \cf3 rLoc\cf3  \cf4 of\cf3  \cf3 strTrimedText\cf3  \cf4 is not\cf3  \cf4 in\cf3  \cf3 pstrCharToTrim\cf3 \
			\cf4 set\cf3  \cf3 rLoc\cf3  \cf4 to\cf3  \cf3 rLoc\cf3  - \cf9 1\cf3 \
		\cf4 end\cf3  \cf4 repeat\cf3 \
	\cf4 end\cf3  \cf4 if\cf3 \
	\
	\cf4 if\cf3  \cf3 lLoc\cf3  \uc0\u8805  \cf3 rLoc\cf3  \cf4 then\cf3 \
		\cf4 return\cf3  \cf7 ""\cf3 \
	\cf4 else\cf3 \
		\cf4 return\cf3  
\f0\i \cf8 text
\f1\i0 \cf3  \cf3 lLoc\cf3  \cf4 thru\cf3  \cf3 rLoc\cf3  \cf4 of\cf3  \cf3 strTrimedText\cf3 \
	\cf4 end\cf3  \cf4 if\cf3 \
\cf4 end\cf3  \cf10 trimThis\cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \

\f0\i \cf2 -- Import exported photos in a new iPhoto album if needed
\f1\i0 \cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \
\cf4 on\cf3  \cf10 import\cf3 (\cf3 photoDescriptors\cf3 , \cf3 session\cf3 )\
	\cf4 set\cf3  \cf5 AppleScript's\cf3  \cf5 text item delimiters\cf3  \cf4 to\cf3  \cf7 ":"\cf3 \
	\cf4 set\cf3  \cf3 targetAlbum\cf3  \cf4 to\cf3  \cf10 getAlbumByPath\cf3 (\cf3 albumName\cf3  \cf4 of\cf3  \cf3 session\cf3 , \cf5 true\cf3 )\
	\
	\cf4 tell\cf3  
\f0\i \cf8 application
\f1\i0 \cf3  \cf5 id\cf3  \cf7 "com.apple.photos"\cf3 \
		\cf4 set\cf3  \cf3 importedPhotos\cf3  \cf4 to\cf3  \{\}\
		\
		\cf4 repeat\cf3  \cf4 with\cf3  \cf3 aPhotoDescriptor\cf3  \cf4 in\cf3  \cf3 photoDescriptors\cf3 \
			
\f0\i \cf2 -- the posix file path
\f1\i0 \cf3 \
			\cf4 local\cf3  \cf3 thePhotoFile\cf3 \
			\cf4 set\cf3  \cf3 thePhotoFile\cf3  \cf4 to\cf3  
\f0\i \cf8 text item
\f1\i0 \cf3  \cf9 1\cf3  \cf4 of\cf3  \cf3 aPhotoDescriptor\cf3 \
			
\f0\i \cf2 -- the LR id. Not used here, but necessary for the way back to LR
\f1\i0 \cf3 \
			\cf4 local\cf3  \cf3 lrId\cf3 \
			\cf4 set\cf3  \cf3 lrId\cf3  \cf4 to\cf3  
\f0\i \cf8 text item
\f1\i0 \cf3  \cf9 2\cf3  \cf4 of\cf3  \cf3 aPhotoDescriptor\cf3 \
			
\f0\i \cf2 -- used as keyword
\f1\i0 \cf3 \
			\cf4 local\cf3  \cf3 lrCat\cf3 \
			\cf4 set\cf3  \cf3 lrCat\cf3  \cf4 to\cf3  
\f0\i \cf8 text item
\f1\i0 \cf3  \cf9 3\cf3  \cf4 of\cf3  \cf3 aPhotoDescriptor\cf3 \
			
\f0\i \cf2 -- if exists a Photos id, it is an update.
\f1\i0 \cf3 \
			\cf4 set\cf3  \cf3 isUpdate\cf3  \cf4 to\cf3  \cf5 false\cf3 \
			\cf4 try\cf3 \
				\cf4 local\cf3  \cf3 photosId\cf3 \
				\cf4 set\cf3  \cf3 photosId\cf3  \cf4 to\cf3  
\f0\i \cf8 text item
\f1\i0 \cf3  \cf9 4\cf3  \cf4 of\cf3  \cf3 aPhotoDescriptor\cf3 \
				\cf4 if\cf3  \cf3 photosId\cf3  \cf4 is not\cf3  \cf4 equal to\cf3  \cf7 ""\cf3  \cf4 then\cf3 \
					\cf4 set\cf3  \cf3 isUpdate\cf3  \cf4 to\cf3  \cf5 true\cf3 \
				\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 end\cf3  \cf4 try\cf3 \
			\
			\cf4 set\cf3  \cf3 previousAlbums\cf3  \cf4 to\cf3  \{\}\
			\cf4 try\cf3 \
				\cf4 if\cf3  \cf3 isUpdate\cf3  \cf4 is\cf3  \cf5 true\cf3  \cf4 then\cf3 \
					\cf4 set\cf3  \cf3 targetPhotos\cf3  \cf4 to\cf3  (\cf4 every\cf3  
\f0\i \cf8 media item
\f1\i0 \cf3  \cf4 whose\cf3  \cf5 id\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf3 photosId\cf3 )\
					\cf4 if\cf3  (
\f2\b \cf6 count
\f1\b0 \cf3  \cf4 of\cf3  \cf3 targetPhotos\cf3 ) \cf4 is\cf3  \cf4 greater than\cf3  \cf9 0\cf3  \cf4 then\cf3 \
						\cf4 tell\cf3  \cf4 me\cf3  \cf4 to\cf3  \cf4 set\cf3  \cf3 previousAlbums\cf3  \cf4 to\cf3  \cf10 getUsedBy\cf3 (\cf3 photosId\cf3 )\
						\cf4 set\cf3  \cf3 theTargetPhoto\cf3  \cf4 to\cf3  
\f0\i \cf8 item
\f1\i0 \cf3  \cf9 1\cf3  \cf4 of\cf3  \cf3 targetPhotos\cf3 \
						
\f0\i \cf2 -- set the photo out-of-date
\f1\i0 \cf3 \
						\cf4 set\cf3  \cf3 newKeywords\cf3  \cf4 to\cf3  \{\cf7 "lr:out-of-date"\cf3 \}\
						\cf4 set\cf3  \cf3 theseKeywords\cf3  \cf4 to\cf3  \cf4 the\cf3  \cf5 keywords\cf3  \cf4 of\cf3  \cf3 theTargetPhoto\cf3 \
						\cf4 if\cf3  \cf3 theseKeywords\cf3  \cf4 is\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3  \cf4 then\cf3 \
							\cf4 set\cf3  \cf5 keywords\cf3  \cf4 of\cf3  \cf3 theTargetPhoto\cf3  \cf4 to\cf3  \cf3 newKeywords\cf3 \
						\cf4 else\cf3 \
							\cf4 set\cf3  \cf5 keywords\cf3  \cf4 of\cf3  \cf3 theTargetPhoto\cf3  \cf4 to\cf3  (\cf3 theseKeywords\cf3  & \cf3 newKeywords\cf3 )\
						\cf4 end\cf3  \cf4 if\cf3 \
					\cf4 else\cf3 \
						
\f0\i \cf2 -- happens if photos were deleted
\f1\i0 \cf3 \
						\cf4 set\cf3  \cf3 isUpdate\cf3  \cf4 to\cf3  \cf5 false\cf3 \
					\cf4 end\cf3  \cf4 if\cf3 \
				\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 on\cf3  \cf4 error\cf3  \cf3 e\cf3 \
				\cf4 error\cf3  \cf7 "Can't get all albums for photoID "\cf3  & \cf3 photosId\cf3  & \cf7 ". Error was "\cf3  & \cf3 e\cf3 \
			\cf4 end\cf3  \cf4 try\cf3 \
			
\f0\i \cf2 --
\f1\i0 \cf3 \
			
\f0\i \cf2 -- now we import the LR photo
\f1\i0 \cf3 \
			\cf4 try\cf3 \
				
\f2\b \cf6 log
\f1\b0 \cf3  \cf7 "The file: "\cf3  & \cf3 thePhotoFile\cf3 \
				\cf4 local\cf3  \cf3 newPhotos\cf3 \
				\cf4 tell\cf3  \cf4 me\cf3  \cf4 to\cf3  \cf4 set\cf3  \cf3 aliasPhotoFile\cf3  \cf4 to\cf3  \{
\f0\i \cf8 POSIX file
\f1\i0 \cf3  \cf3 thePhotoFile\cf3  \cf4 as\cf3  
\f0\i \cf8 alias
\f1\i0 \cf3 \}\
				\cf4 if\cf3  \cf3 targetAlbum\cf3  \cf4 is\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3  \cf4 then\cf3 \
					
\f0\i \cf2 -- on update, the standard album must me ignored.
\f1\i0 \cf3 \
					
\f0\i \cf2 -- later it will  added to the albums of the previous photo version
\f1\i0 \cf3 \
					\cf4 set\cf3  \cf3 newPhotos\cf3  \cf4 to\cf3  
\f2\b \cf6 import
\f1\b0 \cf3  \cf3 aliasPhotoFile\cf3  \cf4 with\cf3  \cf6 skip check duplicates\cf3 \
				\cf4 else\cf3 \
					
\f0\i \cf2 -- if new, it goes into the standard album
\f1\i0 \cf3 \
					\cf4 set\cf3  \cf3 newPhotos\cf3  \cf4 to\cf3  
\f2\b \cf6 import
\f1\b0 \cf3  \cf3 aliasPhotoFile\cf3  \cf6 into\cf3  \cf3 targetAlbum\cf3  \cf4 with\cf3  \cf6 skip check duplicates\cf3 \
				\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 on\cf3  \cf4 error\cf3  \cf3 e\cf3 \
				\cf4 error\cf3  \cf7 "Import of photos failed. Error was: "\cf3  & \cf3 e\cf3 \
			\cf4 end\cf3  \cf4 try\cf3 \
			
\f0\i \cf2 --
\f1\i0 \cf3 \
			
\f0\i \cf2 -- put it into the previous albums			
\f1\i0 \cf3 \
			\cf4 if\cf3  \cf3 isUpdate\cf3  \cf4 is\cf3  \cf5 true\cf3  \cf4 then\cf3 \
				\cf4 repeat\cf3  \cf4 with\cf3  \cf3 aAlbum\cf3  \cf4 in\cf3  \cf3 previousAlbums\cf3 \
					\cf4 set\cf3  \cf3 aAlbumName\cf3  \cf4 to\cf3  \cf5 name\cf3  \cf4 of\cf3  \cf3 aAlbum\cf3 \
					\cf4 tell\cf3  \cf4 me\cf3  \cf4 to\cf3  \cf4 set\cf3  \cf3 isValid\cf3  \cf4 to\cf3  \cf4 not\cf3  \cf10 matchesRegex\cf3 (\cf3 aAlbumName\cf3 , \cf3 ignoreByRegex\cf3  \cf4 of\cf3  \cf3 session\cf3 )\
					\cf4 if\cf3  \cf3 isValid\cf3  \cf4 is\cf3  \cf5 true\cf3  \cf4 then\cf3 \
						\cf4 repeat\cf3  \cf4 with\cf3  \cf3 newPhoto2\cf3  \cf4 in\cf3  \cf3 newPhotos\cf3 \
							\cf4 try\cf3 \
								\cf4 set\cf3  \cf3 newKeywords2\cf3  \cf4 to\cf3  \{\cf7 "album:"\cf3  & \cf3 aAlbumName\cf3 \}\
								\cf4 set\cf3  \cf3 theseKeywords2\cf3  \cf4 to\cf3  \cf4 the\cf3  \cf5 keywords\cf3  \cf4 of\cf3  \cf3 newPhoto2\cf3 \
								\cf4 if\cf3  \cf3 theseKeywords2\cf3  \cf4 is\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3  \cf4 then\cf3 \
									\cf4 set\cf3  \cf5 keywords\cf3  \cf4 of\cf3  \cf3 newPhoto2\cf3  \cf4 to\cf3  \cf3 newKeywords2\cf3 \
								\cf4 else\cf3 \
									\cf4 set\cf3  \cf5 keywords\cf3  \cf4 of\cf3  \cf3 newPhoto2\cf3  \cf4 to\cf3  (\cf3 theseKeywords2\cf3  & \cf3 newKeywords2\cf3 )\
								\cf4 end\cf3  \cf4 if\cf3 \
							\cf4 on\cf3  \cf4 error\cf3  \cf3 e\cf3 \
								\cf4 error\cf3  \cf7 "Can't add new album tag album:"\cf3  & \cf3 aAlbumName\cf3  & \cf7 " on existing photos. Error was: "\cf3  & \cf3 e\cf3 \
							\cf4 end\cf3  \cf4 try\cf3 \
							\cf4 try\cf3 \
								
\f2\b \cf6 add
\f1\b0 \cf3  \cf3 newPhotos\cf3  \cf6 to\cf3  \cf3 aAlbum\cf3 \
							\cf4 on\cf3  \cf4 error\cf3  \cf3 e\cf3 \
								\cf4 error\cf3  \cf7 "Can't add imported photos to album '"\cf3  & \cf3 aAlbumName\cf3  & \cf7 "'. Maybe it's a smart album and you should exlude it. Error was: "\cf3  & \cf3 e\cf3 \
							\cf4 end\cf3  \cf4 try\cf3 \
							\
						\cf4 end\cf3  \cf4 repeat\cf3 \
					\cf4 end\cf3  \cf4 if\cf3 \
				\cf4 end\cf3  \cf4 repeat\cf3 \
			\cf4 end\cf3  \cf4 if\cf3 \
			
\f0\i \cf2 --
\f1\i0 \cf3 \
			
\f0\i \cf2 -- Update metadata
\f1\i0 \cf3 \
			\cf4 try\cf3 \
				\cf4 if\cf3  (
\f2\b \cf6 count
\f1\b0 \cf3  \cf4 of\cf3  \cf3 newPhotos\cf3 ) \cf4 is\cf3  \cf4 greater than\cf3  \cf9 0\cf3  \cf4 then\cf3 \
					
\f0\i \cf2 -- set the name of the LR catalog file
\f1\i0 \cf3 \
					\cf4 set\cf3  \cf3 targetAlbumName\cf3  \cf4 to\cf3  \cf5 name\cf3  \cf4 of\cf3  \cf3 targetAlbum\cf3 \
					\cf4 set\cf3  \cf3 newKeywords\cf3  \cf4 to\cf3  \{\cf7 "lr:"\cf3  & \cf3 lrCat\cf3  & \cf7 ".lrcat"\cf3 , \cf7 "album:"\cf3  & \cf3 targetAlbumName\cf3 \}\
					\cf4 set\cf3  \cf3 theNewPhoto\cf3  \cf4 to\cf3  
\f0\i \cf8 item
\f1\i0 \cf3  \cf9 1\cf3  \cf4 of\cf3  \cf3 newPhotos\cf3 \
					\cf4 set\cf3  \cf3 theseKeywords\cf3  \cf4 to\cf3  \cf4 the\cf3  \cf5 keywords\cf3  \cf4 of\cf3  \cf3 theNewPhoto\cf3 \
					\cf4 if\cf3  \cf3 theseKeywords\cf3  \cf4 is\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3  \cf4 then\cf3 \
						\cf4 set\cf3  \cf5 keywords\cf3  \cf4 of\cf3  \cf3 theNewPhoto\cf3  \cf4 to\cf3  \cf3 newKeywords\cf3 \
					\cf4 else\cf3 \
						\cf4 set\cf3  \cf5 keywords\cf3  \cf4 of\cf3  \cf3 theNewPhoto\cf3  \cf4 to\cf3  (\cf3 theseKeywords\cf3  & \cf3 newKeywords\cf3 )\
					\cf4 end\cf3  \cf4 if\cf3 \
					
\f0\i \cf2 -- store the id for LR
\f1\i0 \cf3 \
					\cf4 set\cf3  \cf3 photosId\cf3  \cf4 to\cf3  \cf4 get\cf3  \cf4 the\cf3  \cf5 id\cf3  \cf4 of\cf3  \cf3 theNewPhoto\cf3 \
					\cf4 set\cf3  \cf3 newEntry\cf3  \cf4 to\cf3  \cf3 thePhotoFile\cf3  & \cf7 ":"\cf3  & \cf3 lrId\cf3  & \cf7 ":"\cf3  & \cf3 lrCat\cf3  & \cf7 ":"\cf3  & \cf3 photosId\cf3 \
					
\f2\b \cf6 log
\f1\b0 \cf3  \cf3 newEntry\cf3 \
					\cf4 copy\cf3  \cf3 newEntry\cf3  \cf4 to\cf3  \cf4 the\cf3  \cf4 end\cf3  \cf4 of\cf3  \cf3 importedPhotos\cf3 \
				\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 on\cf3  \cf4 error\cf3  \cf3 e\cf3 \
				\cf4 error\cf3  \cf7 "Can't keywords on imported photo. Error was: "\cf3  & \cf3 e\cf3 \
			\cf4 end\cf3  \cf4 try\cf3 \
		\cf4 end\cf3  \cf4 repeat\cf3 \
		
\f0\i \cf2 --
\f1\i0 \cf3 \
		\
		\cf4 local\cf3  \cf3 aAlbumName\cf3 \
		\cf4 repeat\cf3  \cf4 with\cf3  \cf3 aAlbum\cf3  \cf4 in\cf3  \cf3 previousAlbums\cf3 \
			\cf4 set\cf3  \cf3 aAlbumName\cf3  \cf4 to\cf3  \cf5 name\cf3  \cf4 of\cf3  \cf3 aAlbum\cf3 \
			\cf4 tell\cf3  \cf4 me\cf3  \cf4 to\cf3  \cf4 set\cf3  \cf3 isValid\cf3  \cf4 to\cf3  \cf4 not\cf3  \cf10 matchesRegex\cf3 (\cf5 name\cf3  \cf4 of\cf3  \cf3 aAlbum\cf3 , \cf3 ignoreByRegex\cf3  \cf4 of\cf3  \cf3 session\cf3 )\
			\cf4 if\cf3  \cf3 isValid\cf3  \cf4 is\cf3  \cf5 true\cf3  \cf4 then\cf3 \
				\cf4 if\cf3  \cf4 not\cf3  \cf3 keepOldPhotos\cf3  \cf4 of\cf3  \cf3 session\cf3  \cf4 then\cf3 \
					\cf4 tell\cf3  \cf4 me\cf3  \cf4 to\cf3  \cf10 cleanupAlbum\cf3 (\cf3 aAlbum\cf3 )\
				\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 end\cf3  \cf4 repeat\cf3 \
		
\f2\b \cf6 delay
\f1\b0 \cf3  \cf9 2\cf3 \
	\cf4 end\cf3  \cf4 tell\cf3 \
	\cf4 set\cf3  \cf5 AppleScript's\cf3  \cf5 text item delimiters\cf3  \cf4 to\cf3  \cf7 " "\cf3 \
	\cf4 return\cf3  \cf3 importedPhotos\cf3 \
\cf4 end\cf3  \cf10 import\cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \

\f0\i \cf2 -- Remove item from list
\f1\i0 \cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \
\cf4 on\cf3  \cf10 removeItemFromList\cf3 (\cf3 theList\cf3 , \cf3 theItem\cf3 )\
	\cf4 repeat\cf3  \cf4 with\cf3  \cf3 theIndex\cf3  \cf4 from\cf3  \cf9 1\cf3  \cf4 to\cf3  \cf4 the\cf3  
\f2\b \cf6 count
\f1\b0 \cf3  \cf4 of\cf3  \cf3 theList\cf3 \
		\cf4 if\cf3  
\f0\i \cf8 item
\f1\i0 \cf3  \cf3 theIndex\cf3  \cf4 of\cf3  \cf3 theList\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf3 theItem\cf3  \cf4 then\cf3 \
			\cf4 if\cf3  \cf3 theIndex\cf3  = \cf9 1\cf3  \cf4 then\cf3 \
				\cf4 return\cf3  
\f0\i \cf8 items
\f1\i0 \cf3  \cf9 2\cf3  \cf4 thru\cf3  \cf9 -1\cf3  \cf4 of\cf3  \cf3 theList\cf3 \
			\cf4 else\cf3  \cf4 if\cf3  \cf3 theIndex\cf3  \cf4 is\cf3  (
\f2\b \cf6 count
\f1\b0 \cf3  \cf3 theList\cf3 ) \cf4 then\cf3 \
				\cf4 return\cf3  
\f0\i \cf8 items
\f1\i0 \cf3  \cf9 1\cf3  \cf4 thru\cf3  \cf9 -2\cf3  \cf4 of\cf3  \cf3 theList\cf3 \
			\cf4 else\cf3 \
				\cf4 tell\cf3  \cf3 theList\cf3  \cf4 to\cf3  \cf4 return\cf3  
\f0\i \cf8 items
\f1\i0 \cf3  \cf9 1\cf3  \cf4 thru\cf3  (\cf3 theIndex\cf3  - \cf9 1\cf3 ) & 
\f0\i \cf8 items
\f1\i0 \cf3  (\cf3 theIndex\cf3  + \cf9 1\cf3 ) \cf4 thru\cf3  \cf9 -1\cf3 \
			\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
	\cf4 end\cf3  \cf4 repeat\cf3 \
	\cf4 return\cf3  \cf3 theList\cf3 \
\cf4 end\cf3  \cf10 removeItemFromList\cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \

\f0\i \cf2 -- removePhotosFromAlbum(theAlbum, thePhotos)
\f1\i0 \cf3 \

\f0\i \cf2 --
\f1\i0 \cf3 \

\f0\i \cf2 -- Removes photos from a single album
\f1\i0 \cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \
\cf4 on\cf3  \cf10 removePhotosFromAlbum\cf3 (\cf3 theAlbum\cf3 , \cf3 thePhotos\cf3 )\
	\cf4 tell\cf3  
\f0\i \cf8 application
\f1\i0 \cf3  \cf5 id\cf3  \cf7 "com.apple.photos"\cf3 \
		\cf4 if\cf3  \cf3 theAlbum\cf3  \cf4 is\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3  \cf4 then\cf3 \
			\cf4 return\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 if\cf3  (
\f2\b \cf6 count
\f1\b0 \cf3  \cf4 of\cf3  \cf3 thePhotos\cf3 ) \cf4 is\cf3  \cf4 equal to\cf3  \cf9 0\cf3  \cf4 then\cf3 \
			\cf4 return\cf3  \cf3 theAlbum\cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 local\cf3  \cf3 allPhotos\cf3 \
		\cf4 local\cf3  \cf3 photosToBeKept\cf3 \
		\cf4 local\cf3  \cf3 photoIds\cf3 \
		\cf4 local\cf3  \cf3 albumPath\cf3 \
		\cf4 local\cf3  \cf3 aKeyword\cf3 \
		\cf4 tell\cf3  \cf4 me\cf3  \cf4 to\cf3  \cf4 set\cf3  \cf3 albumPath\cf3  \cf4 to\cf3  \cf10 getPathByAlbum\cf3 (\cf3 theAlbum\cf3 )\
		\cf4 if\cf3  \cf3 albumPath\cf3  \cf4 is\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3  \cf4 then\cf3 \
			\cf4 return\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
		
\f0\i \cf2 -- get all photos from theAlbum
\f1\i0 \cf3 \
		\cf4 set\cf3  \cf3 allPhotos\cf3  \cf4 to\cf3  (\cf4 get\cf3  
\f0\i \cf8 media items
\f1\i0 \cf3  \cf4 of\cf3  \cf3 theAlbum\cf3 )\
		\cf4 set\cf3  \cf3 photoIds\cf3  \cf4 to\cf3  \{\}\
		
\f0\i \cf2 -- collect all photos (the id) which should be kept
\f1\i0 \cf3 \
		\cf4 repeat\cf3  \cf4 with\cf3  \cf3 photo\cf3  \cf4 in\cf3  \cf3 allPhotos\cf3 \
			\cf4 set\cf3  \cf3 found\cf3  \cf4 to\cf3  \cf5 false\cf3 \
			\cf4 repeat\cf3  \cf4 with\cf3  \cf3 photoToBeDeleted\cf3  \cf4 in\cf3  \cf3 thePhotos\cf3 \
				\cf4 if\cf3  \cf5 id\cf3  \cf4 of\cf3  \cf3 photo\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf5 id\cf3  \cf4 of\cf3  \cf3 photoToBeDeleted\cf3  \cf4 then\cf3 \
					\cf4 set\cf3  \cf3 found\cf3  \cf4 to\cf3  \cf5 true\cf3 \
				\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 end\cf3  \cf4 repeat\cf3 \
			\cf4 if\cf3  \cf4 not\cf3  \cf3 found\cf3  \cf4 then\cf3 \
				\cf4 set\cf3  \cf4 end\cf3  \cf4 of\cf3  \cf3 photoIds\cf3  \cf4 to\cf3  \cf5 id\cf3  \cf4 of\cf3  \cf3 photo\cf3 \
			\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 end\cf3  \cf4 repeat\cf3 \
		\
		
\f0\i \cf2 -- get the photos which should be kept
\f1\i0 \cf3 \
		
\f0\i \cf2 -- remarks:
\f1\i0 \cf3 \
		
\f0\i \cf2 -- the photo object in an album is different to the object which is 
\f1\i0 \cf3 \
		
\f0\i \cf2 -- in the global mediathek
\f1\i0 \cf3 \
		\cf4 set\cf3  \cf3 photosToBeKept\cf3  \cf4 to\cf3  \{\}\
		\
		\cf4 repeat\cf3  \cf4 with\cf3  \cf3 photoId\cf3  \cf4 in\cf3  \cf3 photoIds\cf3 \
			\cf4 set\cf3  \cf3 photos\cf3  \cf4 to\cf3  (\cf4 get\cf3  
\f0\i \cf8 media items
\f1\i0 \cf3  \cf4 whose\cf3  \cf5 id\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf3 photoId\cf3 )\
			\cf4 set\cf3  \cf4 end\cf3  \cf4 of\cf3  \cf3 photosToBeKept\cf3  \cf4 to\cf3  
\f0\i \cf8 item
\f1\i0 \cf3  \cf9 1\cf3  \cf4 of\cf3  \cf3 photos\cf3 \
		\cf4 end\cf3  \cf4 repeat\cf3 \
		\
		\cf4 if\cf3  (
\f2\b \cf6 count
\f1\b0 \cf3  \cf4 of\cf3  \cf3 photosToBeKept\cf3 ) \cf4 is not\cf3  \cf4 equal to\cf3  (
\f2\b \cf6 count
\f1\b0 \cf3  \cf4 of\cf3  \cf3 allPhotos\cf3 ) \cf4 then\cf3 \
			
\f2\b \cf6 delete
\f1\b0 \cf3  \cf3 theAlbum\cf3 \
			\cf4 tell\cf3  \cf4 me\cf3  \cf4 to\cf3  \cf4 set\cf3  \cf3 theAlbum\cf3  \cf4 to\cf3  \cf10 getAlbumByPath\cf3 (\cf3 albumPath\cf3 , \cf5 true\cf3 )\
			\cf4 if\cf3  (
\f2\b \cf6 count
\f1\b0 \cf3  \cf4 of\cf3  \cf3 photosToBeKept\cf3 ) \cf4 is\cf3  \cf4 greater than\cf3  \cf9 0\cf3  \cf4 then\cf3 \
				
\f2\b \cf6 add
\f1\b0 \cf3  \cf3 photosToBeKept\cf3  \cf6 to\cf3  \cf3 theAlbum\cf3 \
			\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
		\
		\cf4 return\cf3  \cf3 theAlbum\cf3 \
		\
	\cf4 end\cf3  \cf4 tell\cf3 \
\cf4 end\cf3  \cf10 removePhotosFromAlbum\cf3 \
\

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \

\f0\i \cf2 -- cleanupAlbum(theAlbum)
\f1\i0 \cf3 \

\f0\i \cf2 --
\f1\i0 \cf3 \

\f0\i \cf2 -- Removes photos from a single album which are out of date or no onger published
\f1\i0 \cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \
\cf4 on\cf3  \cf10 cleanupAlbum\cf3 (\cf3 theAlbum\cf3 )\
	\cf4 tell\cf3  
\f0\i \cf8 application
\f1\i0 \cf3  \cf5 id\cf3  \cf7 "com.apple.photos"\cf3 \
		\cf4 if\cf3  \cf3 theAlbum\cf3  \cf4 is\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3  \cf4 then\cf3 \
			\cf4 return\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 local\cf3  \cf3 allPhotos\cf3 \
		\cf4 local\cf3  \cf3 photosToBeKept\cf3 \
		\cf4 local\cf3  \cf3 photoIds\cf3 \
		\cf4 local\cf3  \cf3 albumPath\cf3 \
		\cf4 local\cf3  \cf3 aKeyword\cf3 \
		\cf4 tell\cf3  \cf4 me\cf3  \cf4 to\cf3  \cf4 set\cf3  \cf3 albumPath\cf3  \cf4 to\cf3  \cf10 getPathByAlbum\cf3 (\cf3 theAlbum\cf3 )\
		\cf4 if\cf3  \cf3 albumPath\cf3  \cf4 is\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3  \cf4 then\cf3 \
			\cf4 return\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 set\cf3  \cf3 allPhotos\cf3  \cf4 to\cf3  (\cf4 get\cf3  
\f0\i \cf8 media items
\f1\i0 \cf3  \cf4 of\cf3  \cf3 theAlbum\cf3 )\
		\cf4 set\cf3  \cf3 photoIds\cf3  \cf4 to\cf3  \{\}\
		\cf4 repeat\cf3  \cf4 with\cf3  \cf3 photo\cf3  \cf4 in\cf3  \cf3 allPhotos\cf3 \
			\cf4 set\cf3  \cf3 theKeywords\cf3  \cf4 to\cf3  \cf4 the\cf3  \cf5 keywords\cf3  \cf4 of\cf3  \cf3 photo\cf3 \
			\cf4 set\cf3  \cf3 found\cf3  \cf4 to\cf3  \cf5 false\cf3 \
			\cf4 repeat\cf3  \cf4 with\cf3  \cf5 index\cf3  \cf4 from\cf3  \cf9 1\cf3  \cf4 to\cf3  
\f2\b \cf6 count
\f1\b0 \cf3  \cf4 of\cf3  \cf3 theKeywords\cf3 \
				\cf4 if\cf3  
\f0\i \cf8 item
\f1\i0 \cf3  \cf5 index\cf3  \cf4 of\cf3  \cf3 theKeywords\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf7 "lr:out-of-date"\cf3  \cf4 or\cf3  
\f0\i \cf8 item
\f1\i0 \cf3  \cf5 index\cf3  \cf4 of\cf3  \cf3 theKeywords\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf7 "lr:no-longer-published"\cf3  \cf4 then\cf3 \
					\cf4 set\cf3  \cf3 found\cf3  \cf4 to\cf3  \cf5 true\cf3 \
				\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 end\cf3  \cf4 repeat\cf3 \
			\cf4 if\cf3  \cf4 not\cf3  \cf3 found\cf3  \cf4 then\cf3 \
				\cf4 set\cf3  \cf4 end\cf3  \cf4 of\cf3  \cf3 photoIds\cf3  \cf4 to\cf3  \cf5 id\cf3  \cf4 of\cf3  \cf3 photo\cf3 \
			\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 end\cf3  \cf4 repeat\cf3 \
		\
		\cf4 set\cf3  \cf3 photosToBeKept\cf3  \cf4 to\cf3  \{\}\
		\
		\cf4 repeat\cf3  \cf4 with\cf3  \cf3 photoId\cf3  \cf4 in\cf3  \cf3 photoIds\cf3 \
			\cf4 set\cf3  \cf3 photos\cf3  \cf4 to\cf3  (\cf4 get\cf3  
\f0\i \cf8 media items
\f1\i0 \cf3  \cf4 whose\cf3  \cf5 id\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf3 photoId\cf3 )\
			\cf4 set\cf3  \cf4 end\cf3  \cf4 of\cf3  \cf3 photosToBeKept\cf3  \cf4 to\cf3  
\f0\i \cf8 item
\f1\i0 \cf3  \cf9 1\cf3  \cf4 of\cf3  \cf3 photos\cf3 \
		\cf4 end\cf3  \cf4 repeat\cf3 \
		\
		\cf4 if\cf3  (
\f2\b \cf6 count
\f1\b0 \cf3  \cf4 of\cf3  \cf3 photosToBeKept\cf3 ) \cf4 is not\cf3  \cf4 equal to\cf3  (
\f2\b \cf6 count
\f1\b0 \cf3  \cf4 of\cf3  \cf3 allPhotos\cf3 ) \cf4 then\cf3 \
			
\f2\b \cf6 delete
\f1\b0 \cf3  \cf3 theAlbum\cf3 \
			\cf4 tell\cf3  \cf4 me\cf3  \cf4 to\cf3  \cf4 set\cf3  \cf3 theAlbum\cf3  \cf4 to\cf3  \cf10 getAlbumByPath\cf3 (\cf3 albumPath\cf3 , \cf5 true\cf3 )\
			\cf4 if\cf3  (
\f2\b \cf6 count
\f1\b0 \cf3  \cf4 of\cf3  \cf3 photosToBeKept\cf3 ) \cf4 is\cf3  \cf4 greater than\cf3  \cf9 0\cf3  \cf4 then\cf3 \
				
\f2\b \cf6 add
\f1\b0 \cf3  \cf3 photosToBeKept\cf3  \cf6 to\cf3  \cf3 theAlbum\cf3 \
			\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
		\
		\cf4 return\cf3  \cf3 theAlbum\cf3 \
		\
	\cf4 end\cf3  \cf4 tell\cf3 \
\cf4 end\cf3  \cf10 cleanupAlbum\cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \

\f0\i \cf2 -- Remove photos from albums
\f1\i0 \cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \
\cf4 on\cf3  \cf10 remove\cf3 (\cf3 photoDescriptors\cf3 , \cf3 session\cf3 )\
	\cf4 set\cf3  \cf5 AppleScript's\cf3  \cf5 text item delimiters\cf3  \cf4 to\cf3  \cf7 ":"\cf3 \
	\cf4 set\cf3  \cf3 removedPhotos\cf3  \cf4 to\cf3  \{\}\
	\
	\cf4 set\cf3  \cf3 targetAlbum\cf3  \cf4 to\cf3  \cf10 getAlbumByPath\cf3 (\cf3 albumName\cf3  \cf4 of\cf3  \cf3 session\cf3 , \cf5 false\cf3 )\
	\cf4 if\cf3  \cf3 targetAlbum\cf3  \cf4 is\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3  \cf4 then\cf3 \
		\cf4 return\cf3  \cf3 removedPhotos\cf3 \
	\cf4 end\cf3  \cf4 if\cf3 \
	\
	\cf4 tell\cf3  
\f0\i \cf8 application
\f1\i0 \cf3  \cf5 id\cf3  \cf7 "com.apple.photos"\cf3 \
		\cf4 set\cf3  \cf3 photosToBeRemovedFromAlbum\cf3  \cf4 to\cf3  \{\}\
		\cf4 repeat\cf3  \cf4 with\cf3  \cf3 aPhotoDescriptor\cf3  \cf4 in\cf3  \cf3 photoDescriptors\cf3 \
			
\f0\i \cf2 -- the LR id. For future use
\f1\i0 \cf3 \
			\cf4 set\cf3  \cf3 lrId\cf3  \cf4 to\cf3  
\f0\i \cf8 text item
\f1\i0 \cf3  \cf9 2\cf3  \cf4 of\cf3  \cf3 aPhotoDescriptor\cf3 \
			
\f0\i \cf2 -- name of cataloge
\f1\i0 \cf3 \
			\cf4 set\cf3  \cf3 lrCat\cf3  \cf4 to\cf3  
\f0\i \cf8 text item
\f1\i0 \cf3  \cf9 3\cf3  \cf4 of\cf3  \cf3 aPhotoDescriptor\cf3 \
			
\f0\i \cf2 -- Photos app UID
\f1\i0 \cf3 \
			\cf4 set\cf3  \cf3 photosId\cf3  \cf4 to\cf3  
\f0\i \cf8 text item
\f1\i0 \cf3  \cf9 4\cf3  \cf4 of\cf3  \cf3 aPhotoDescriptor\cf3 \
			\
			\cf4 try\cf3 \
				\cf4 set\cf3  \cf3 targetPhotos\cf3  \cf4 to\cf3  (\cf4 every\cf3  
\f0\i \cf8 media item
\f1\i0 \cf3  \cf4 whose\cf3  \cf5 id\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf3 photosId\cf3 )\
				\cf4 if\cf3  (
\f2\b \cf6 count
\f1\b0 \cf3  \cf4 of\cf3  \cf3 targetPhotos\cf3 ) \cf4 is\cf3  \cf4 greater than\cf3  \cf9 0\cf3  \cf4 then\cf3 \
					
\f0\i \cf2 -- the photo exists
\f1\i0 \cf3 \
					\cf4 set\cf3  \cf3 theTargetPhoto\cf3  \cf4 to\cf3  
\f0\i \cf8 item
\f1\i0 \cf3  \cf9 1\cf3  \cf4 of\cf3  \cf3 targetPhotos\cf3 \
					\cf4 local\cf3  \cf3 allUsedByAlbums\cf3 \
					\cf4 tell\cf3  \cf4 me\cf3  \cf4 to\cf3  \cf4 set\cf3  \cf3 allUsedByAlbums\cf3  \cf4 to\cf3  \cf10 getUsedBy\cf3 (\cf3 photosId\cf3 )\
					\
					\
					\cf4 if\cf3  (
\f2\b \cf6 count
\f1\b0 \cf3  \cf4 of\cf3  \cf3 allUsedByAlbums\cf3 ) \cf4 is\cf3  \cf4 equal to\cf3  \cf9 0\cf3  \cf4 then\cf3 \
						
\f0\i \cf2 -- if photos is not used any more we clear photosId from LR
\f1\i0 \cf3 \
						\cf4 set\cf3  \cf3 newEntry\cf3  \cf4 to\cf3  \cf7 "n.a."\cf3  & \cf7 ":"\cf3  & \cf3 lrId\cf3  & \cf7 ":"\cf3  & \cf3 lrCat\cf3  & \cf7 ":"\cf3  & \cf3 photosId\cf3 \
						\cf4 copy\cf3  \cf3 newEntry\cf3  \cf4 to\cf3  \cf4 the\cf3  \cf4 end\cf3  \cf4 of\cf3  \cf3 removedPhotos\cf3 \
					\cf4 else\cf3 \
						
\f0\i \cf2 -- the photo exists and is used in any album
\f1\i0 \cf3 \
						
\f0\i \cf2 --
\f1\i0 \cf3 \
						
\f0\i \cf2 -- validate that the target photos is really in the target album
\f1\i0 \cf3 \
						\cf4 set\cf3  \cf3 photoIsInTargetAlbum\cf3  \cf4 to\cf3  \cf5 false\cf3 \
						\cf4 repeat\cf3  \cf4 with\cf3  \cf3 aUsedByAlbum\cf3  \cf4 in\cf3  \cf3 allUsedByAlbums\cf3 \
							\cf4 if\cf3  \cf5 id\cf3  \cf4 of\cf3  \cf3 aUsedByAlbum\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf5 id\cf3  \cf4 of\cf3  \cf3 targetAlbum\cf3  \cf4 then\cf3 \
								\cf4 set\cf3  \cf3 photoIsInTargetAlbum\cf3  \cf4 to\cf3  \cf5 true\cf3 \
							\cf4 end\cf3  \cf4 if\cf3 \
						\cf4 end\cf3  \cf4 repeat\cf3 \
						\
						
\f0\i \cf2 -- if target photo is not in the target album, there is nothing to do
\f1\i0 \cf3 \
						\cf4 if\cf3  \cf3 photoIsInTargetAlbum\cf3  \cf4 then\cf3 \
							\cf4 local\cf3  \cf3 theseKeywords\cf3 \
							\cf4 set\cf3  \cf3 theseKeywords\cf3  \cf4 to\cf3  \cf4 the\cf3  \cf5 keywords\cf3  \cf4 of\cf3  \cf3 theTargetPhoto\cf3 \
							\
							\cf4 local\cf3  \cf3 validAlbums\cf3 \
							\cf4 local\cf3  \cf3 aAlbumName\cf3 \
							\cf4 set\cf3  \cf3 validAlbums\cf3  \cf4 to\cf3  \{\}\
							\cf4 repeat\cf3  \cf4 with\cf3  \cf3 aAlbum\cf3  \cf4 in\cf3  \cf3 allUsedByAlbums\cf3 \
								\cf4 set\cf3  \cf3 aAlbumName\cf3  \cf4 to\cf3  \cf5 name\cf3  \cf4 of\cf3  \cf3 aAlbum\cf3 \
								\cf4 tell\cf3  \cf4 me\cf3  \cf4 to\cf3  \cf4 set\cf3  \cf3 isValid\cf3  \cf4 to\cf3  \cf4 not\cf3  \cf10 matchesRegex\cf3 (\cf3 aAlbumName\cf3 , \cf3 ignoreByRegex\cf3  \cf4 of\cf3  \cf3 session\cf3 )\
								\cf4 if\cf3  \cf3 isValid\cf3  \cf4 then\cf3 \
									\cf4 set\cf3  \cf4 end\cf3  \cf4 of\cf3  \cf3 validAlbums\cf3  \cf4 to\cf3  \cf3 aAlbum\cf3 \
								\cf4 end\cf3  \cf4 if\cf3 \
							\cf4 end\cf3  \cf4 repeat\cf3 \
							\
							
\f0\i \cf2 -- mark photo as no-longer-published if necessary
\f1\i0 \cf3 \
							\cf4 if\cf3  (
\f2\b \cf6 count
\f1\b0 \cf3  \cf4 of\cf3  \cf3 validAlbums\cf3 ) \cf4 is\cf3  \cf4 equal to\cf3  \cf9 1\cf3  \cf4 then\cf3 \
								
\f0\i \cf2 -- target album is the last album which holds the target photo
\f1\i0 \cf3 \
								
\f0\i \cf2 -- we mark it as no-longer-published
\f1\i0 \cf3 \
								\cf4 set\cf3  \cf3 newEntry\cf3  \cf4 to\cf3  \cf7 "n.a."\cf3  & \cf7 ":"\cf3  & \cf3 lrId\cf3  & \cf7 ":"\cf3  & \cf3 lrCat\cf3  & \cf7 ":"\cf3  & \cf3 photosId\cf3 \
								\cf4 copy\cf3  \cf3 newEntry\cf3  \cf4 to\cf3  \cf4 the\cf3  \cf4 end\cf3  \cf4 of\cf3  \cf3 removedPhotos\cf3 \
								\cf4 set\cf3  \cf3 noLongerPublishedKeyword\cf3  \cf4 to\cf3  \cf7 "lr:no-longer-published"\cf3 \
							\cf4 else\cf3 \
								
\f0\i \cf2 -- target is still in use
\f1\i0 \cf3 \
								\cf4 set\cf3  \cf3 noLongerPublishedKeyword\cf3  \cf4 to\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3 \
							\cf4 end\cf3  \cf4 if\cf3 \
							\
							
\f0\i \cf2 -- remove the album keyword
\f1\i0 \cf3 \
							\cf4 if\cf3  \cf3 theseKeywords\cf3  \cf4 is\cf3  \cf4 not\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3  \cf4 then\cf3 \
								\cf4 local\cf3  \cf3 oldKeyword\cf3 \
								\cf4 set\cf3  \cf3 oldKeyword\cf3  \cf4 to\cf3  \cf7 "album:"\cf3  & \cf5 name\cf3  \cf4 of\cf3  \cf3 targetAlbum\cf3 \
								\cf4 tell\cf3  \cf4 me\cf3  \cf4 to\cf3  \cf4 set\cf3  \cf3 newKeywords\cf3  \cf4 to\cf3  \cf10 removeItemFromList\cf3 (\cf3 theseKeywords\cf3 , \cf3 oldKeyword\cf3 )\
								\cf4 if\cf3  \cf3 noLongerPublishedKeyword\cf3  \cf4 is\cf3  \cf4 not\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3  \cf4 then\cf3 \
									\cf4 set\cf3  \cf4 end\cf3  \cf4 of\cf3  \cf3 newKeywords\cf3  \cf4 to\cf3  \cf3 noLongerPublishedKeyword\cf3 \
								\cf4 end\cf3  \cf4 if\cf3 \
								\cf4 set\cf3  \cf5 keywords\cf3  \cf4 of\cf3  \cf3 theTargetPhoto\cf3  \cf4 to\cf3  \cf3 newKeywords\cf3 \
							\cf4 else\cf3 \
								\cf4 if\cf3  \cf3 noLongerPublishedKeyword\cf3  \cf4 is\cf3  \cf4 not\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3  \cf4 then\cf3 \
									\cf4 set\cf3  \cf3 newKeywords\cf3  \cf4 to\cf3  \{\}\
									\cf4 set\cf3  \cf4 end\cf3  \cf4 of\cf3  \cf3 newKeywords\cf3  \cf4 to\cf3  \cf3 noLongerPublishedKeyword\cf3 \
									\cf4 set\cf3  \cf5 keywords\cf3  \cf4 of\cf3  \cf3 theTargetPhoto\cf3  \cf4 to\cf3  \cf3 newKeywords\cf3 \
								\cf4 end\cf3  \cf4 if\cf3 \
							\cf4 end\cf3  \cf4 if\cf3 \
							
\f0\i \cf2 -- remove target photo from target album
\f1\i0 \cf3 \
							\cf4 set\cf3  \cf4 end\cf3  \cf4 of\cf3  \cf3 photosToBeRemovedFromAlbum\cf3  \cf4 to\cf3  \cf3 theTargetPhoto\cf3 \
						\cf4 end\cf3  \cf4 if\cf3 \
					\cf4 end\cf3  \cf4 if\cf3 \
				\cf4 else\cf3 \
					
\f0\i \cf2 -- target photo was not found at all.
\f1\i0 \cf3 \
					
\f0\i \cf2 -- but as it was sent from LR we should clear photosId in LR
\f1\i0 \cf3 \
					\cf4 set\cf3  \cf3 newEntry\cf3  \cf4 to\cf3  \cf7 "n.a."\cf3  & \cf7 ":"\cf3  & \cf3 lrId\cf3  & \cf7 ":"\cf3  & \cf3 lrCat\cf3  & \cf7 ":"\cf3  & \cf3 photosId\cf3 \
					\cf4 copy\cf3  \cf3 newEntry\cf3  \cf4 to\cf3  \cf4 the\cf3  \cf4 end\cf3  \cf4 of\cf3  \cf3 removedPhotos\cf3 \
				\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 on\cf3  \cf4 error\cf3  \cf3 e\cf3 \
				\cf4 error\cf3  \cf7 "Can't remove photo from album for photoID "\cf3  & \cf3 photosId\cf3  & \cf7 ". Error was "\cf3  & \cf3 e\cf3 \
			\cf4 end\cf3  \cf4 try\cf3 \
		\cf4 end\cf3  \cf4 repeat\cf3 \
		
\f0\i \cf2 --
\f1\i0 \cf3 \
		\cf4 tell\cf3  \cf4 me\cf3  \cf4 to\cf3  \cf4 set\cf3  \cf3 targetAlbum\cf3  \cf4 to\cf3  \cf10 removePhotosFromAlbum\cf3 (\cf3 targetAlbum\cf3 , \cf3 photosToBeRemovedFromAlbum\cf3 )\
	\cf4 end\cf3  \cf4 tell\cf3 \
	\cf4 set\cf3  \cf5 AppleScript's\cf3  \cf5 text item delimiters\cf3  \cf4 to\cf3  \cf7 " "\cf3 \
	\cf4 return\cf3  \cf3 removedPhotos\cf3 \
\cf4 end\cf3  \cf10 remove\cf3 \
\

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \

\f0\i \cf2 -- Update status flag in session file to tell Lightroom we are finished here
\f1\i0 \cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \
\cf4 on\cf3  \cf10 updateSessionFile\cf3 (\cf3 sessionFile\cf3 , \cf3 session\cf3 )\
	
\f0\i \cf2 -- tell application "Finder" to delete POSIX file sessionFile
\f1\i0 \cf3 \
	\cf4 set\cf3  \cf3 fileRef\cf3  \cf4 to\cf3  \cf11 open for access\cf3  \cf3 sessionFile\cf3  \cf4 as\cf3  \'ab
\f0\i \cf8 class
\f1\i0 \cf3  \cf9 utf8\cf3 \'bb \cf4 with\cf3  \cf11 write permission\cf3 \
	\cf11 set eof\cf3  \cf3 fileRef\cf3  \cf11 to\cf3  \cf9 0\cf3 \
	\cf4 if\cf3  \cf3 hasErrors\cf3  \cf4 of\cf3  \cf3 session\cf3  \cf4 then\cf3 \
		\cf4 set\cf3  \cf3 exportDone\cf3  \cf4 of\cf3  \cf3 session\cf3  \cf4 to\cf3  \cf5 false\cf3 \
	\cf4 else\cf3 \
		\cf4 set\cf3  \cf3 exportDone\cf3  \cf4 of\cf3  \cf3 session\cf3  \cf4 to\cf3  \cf5 true\cf3 \
	\cf4 end\cf3  \cf4 if\cf3 \
	\
	\cf11 write\cf3  \'ac\
		\cf7 "albumName="\cf3  & \cf3 albumName\cf3  \cf4 of\cf3  \cf3 session\cf3  & \cf5 linefeed\cf3  & \'ac\
		\cf7 "mode="\cf3  & \cf3 mode\cf3  \cf4 of\cf3  \cf3 session\cf3  & \cf5 linefeed\cf3  & \'ac\
		\cf7 "exportDone="\cf3  & \cf3 exportDone\cf3  \cf4 of\cf3  \cf3 session\cf3  & \cf5 linefeed\cf3  & \'ac\
		\cf7 "ignoreByRegex="\cf3  & \cf3 ignoreByRegex\cf3  \cf4 of\cf3  \cf3 session\cf3  & \cf5 linefeed\cf3  & \'ac\
		\cf7 "hasErrors="\cf3  & \cf3 hasErrors\cf3  \cf4 of\cf3  \cf3 session\cf3  & \cf5 linefeed\cf3  & \'ac\
		\cf7 "keepOldPotos="\cf3  & \cf3 keepOldPhotos\cf3  \cf4 of\cf3  \cf3 session\cf3  & \cf5 linefeed\cf3  & \'ac\
		\cf7 "errorMsg="\cf3  & \cf3 errorMsg\cf3  \cf4 of\cf3  \cf3 session\cf3  \cf11 to\cf3  \cf3 sessionFile\cf3 \
	\cf11 close access\cf3  \cf3 fileRef\cf3 \
\cf4 end\cf3  \cf10 updateSessionFile\cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \

\f0\i \cf2 --
\f1\i0 \cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \
\cf4 on\cf3  \cf10 updatePhotosFile\cf3 (\cf3 photosFile\cf3 , \cf3 photosList\cf3 )\
	\cf11 open for access\cf3  \cf3 photosFile\cf3  \cf4 as\cf3  \'ab
\f0\i \cf8 class
\f1\i0 \cf3  \cf9 utf8\cf3 \'bb \cf4 with\cf3  \cf11 write permission\cf3 \
	\cf11 set eof\cf3  \cf4 of\cf3  \cf3 photosFile\cf3  \cf11 to\cf3  \cf9 0\cf3 \
	\cf4 repeat\cf3  \cf4 with\cf3  \cf3 thePhotoFile\cf3  \cf4 in\cf3  \cf3 photosList\cf3 \
		
\f2\b \cf6 log
\f1\b0 \cf3  \cf3 thePhotoFile\cf3 \
		\cf11 write\cf3  \cf3 thePhotoFile\cf3  & \cf7 "\
"\cf3  \cf11 to\cf3  \cf3 photosFile\cf3 \
	\cf4 end\cf3  \cf4 repeat\cf3 \
	\cf11 close access\cf3  \cf3 photosFile\cf3 \
\cf4 end\cf3  \cf10 updatePhotosFile\cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \

\f0\i \cf2 -- getUsedBy(photosId)
\f1\i0 \cf3 \

\f0\i \cf2 --
\f1\i0 \cf3 \

\f0\i \cf2 -- returns a list of albums of all folders which uses the photo identified by 
\f1\i0 \cf3 \

\f0\i \cf2 -- ptotosId
\f1\i0 \cf3 \

\f0\i \cf2 -- 
\f1\i0 \cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \
\cf4 on\cf3  \cf10 getUsedBy\cf3 (\cf3 photosId\cf3 )\
	\cf4 local\cf3  \cf3 usedBy\cf3 \
	\cf4 set\cf3  \cf3 usedBy\cf3  \cf4 to\cf3  \{\}\
	\cf4 tell\cf3  
\f0\i \cf8 application
\f1\i0 \cf3  \cf7 "Photos"\cf3 \
		\cf4 set\cf3  \cf3 usedBy\cf3  \cf4 to\cf3  \cf4 get\cf3  (
\f0\i \cf8 albums
\f1\i0 \cf3  \cf4 whose\cf3  \cf5 id\cf3  \cf4 of\cf3  
\f0\i \cf8 media items
\f1\i0 \cf3  \cf4 contains\cf3  \cf3 photosId\cf3 )\
		\cf4 repeat\cf3  \cf4 with\cf3  \cf3 aFolder\cf3  \cf4 in\cf3  
\f0\i \cf8 folders
\f1\i0 \cf3 \
			\cf4 tell\cf3  \cf4 me\cf3  \cf4 to\cf3  \cf4 set\cf3  \cf3 usedBy\cf3  \cf4 to\cf3  \cf10 _getUsedBy\cf3 (\cf3 aFolder\cf3 , \cf3 photosId\cf3 , \cf3 usedBy\cf3 )\
		\cf4 end\cf3  \cf4 repeat\cf3 \
	\cf4 end\cf3  \cf4 tell\cf3 \
	\cf4 return\cf3  \cf3 usedBy\cf3 \
\cf4 end\cf3  \cf10 getUsedBy\cf3 \
\

\f0\i \cf2 -- recursive function used by getUsedBy()
\f1\i0 \cf3 \
\cf4 on\cf3  \cf10 _getUsedBy\cf3 (\cf3 aFolder\cf3 , \cf3 photosId\cf3 , \cf3 usedBy\cf3 )\
	\cf4 local\cf3  \cf3 usedBy\cf3 \
	\cf4 tell\cf3  
\f0\i \cf8 application
\f1\i0 \cf3  \cf7 "Photos"\cf3 \
		\cf4 tell\cf3  \cf3 aFolder\cf3 \
			\cf4 set\cf3  \cf3 usedBy\cf3  \cf4 to\cf3  \cf3 usedBy\cf3  & (
\f0\i \cf8 albums
\f1\i0 \cf3  \cf4 whose\cf3  \cf5 id\cf3  \cf4 of\cf3  
\f0\i \cf8 media items
\f1\i0 \cf3  \cf4 contains\cf3  \cf3 photosId\cf3 )\
			\cf4 repeat\cf3  \cf4 with\cf3  \cf3 aFolder\cf3  \cf4 in\cf3  
\f0\i \cf8 folders
\f1\i0 \cf3 \
				\cf4 tell\cf3  \cf4 me\cf3  \cf4 to\cf3  \cf4 set\cf3  \cf3 usedBy\cf3  \cf4 to\cf3  \cf10 _getUsedBy\cf3 (\cf3 aFolder\cf3 , \cf3 photosId\cf3 , \cf3 usedBy\cf3 )\
			\cf4 end\cf3  \cf4 repeat\cf3 \
		\cf4 end\cf3  \cf4 tell\cf3 \
	\cf4 end\cf3  \cf4 tell\cf3 \
	\cf4 return\cf3  \cf3 usedBy\cf3 \
\cf4 end\cf3  \cf10 _getUsedBy\cf3 \
\

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \

\f0\i \cf2 -- getPathByAlbum(theAlbum)
\f1\i0 \cf3 \

\f0\i \cf2 --
\f1\i0 \cf3 \

\f0\i \cf2 -- Returns full path of theAlbum
\f1\i0 \cf3 \

\f0\i \cf2 --
\f1\i0 \cf3 \

\f0\i \cf2 -- format of path: "/folder1/folder2/..../album"
\f1\i0 \cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \
\cf4 on\cf3  \cf10 getPathByAlbum\cf3 (\cf3 theAlbum\cf3 )\
	\cf4 local\cf3  \cf3 thePath\cf3 \
	\cf4 set\cf3  \cf3 thePath\cf3  \cf4 to\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3 \
	\cf4 local\cf3  \cf3 theAlbums\cf3 \
	\cf4 tell\cf3  
\f0\i \cf8 application
\f1\i0 \cf3  \cf7 "Photos"\cf3 \
		\cf4 set\cf3  \cf3 theAlbums\cf3  \cf4 to\cf3  \cf4 get\cf3  
\f0\i \cf8 albums
\f1\i0 \cf3  \cf4 whose\cf3  \cf5 id\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf5 id\cf3  \cf4 of\cf3  \cf3 theAlbum\cf3 \
		
\f0\i \cf2 -- repeat with aAlbum in albums
\f1\i0 \cf3 \
		
\f0\i \cf2 --	if id of aAlbum equals 
\f1\i0 \cf3 \
		
\f0\i \cf2 --end
\f1\i0 \cf3 \
		\cf4 if\cf3  \cf3 theAlbums\cf3  \cf4 is\cf3  \cf4 not\cf3  \{\} \cf4 then\cf3 \
			\cf4 return\cf3  \cf7 "/"\cf3  & \cf5 name\cf3  \cf4 of\cf3  \cf4 first\cf3  
\f0\i \cf8 item
\f1\i0 \cf3  \cf4 of\cf3  \cf3 theAlbums\cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 repeat\cf3  \cf4 with\cf3  \cf3 aFolder\cf3  \cf4 in\cf3  
\f0\i \cf8 folders
\f1\i0 \cf3 \
			\cf4 local\cf3  \cf3 folderName\cf3 \
			\cf4 set\cf3  \cf3 folderName\cf3  \cf4 to\cf3  \cf5 name\cf3  \cf4 of\cf3  \cf3 aFolder\cf3 \
			\cf4 tell\cf3  \cf4 me\cf3  \cf4 to\cf3  \cf4 set\cf3  \cf3 thePath\cf3  \cf4 to\cf3  \cf10 _getPathByAlbum\cf3 (\cf3 aFolder\cf3 , \cf3 theAlbum\cf3 , \cf3 thePath\cf3 )\
			\cf4 if\cf3  \cf3 thePath\cf3  \cf4 is\cf3  \cf4 not\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3  \cf4 then\cf3 \
				\cf4 set\cf3  \cf3 thePath\cf3  \cf4 to\cf3  \cf7 "/"\cf3  & \cf3 thePath\cf3 \
				\cf4 return\cf3  \cf3 thePath\cf3 \
			\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 end\cf3  \cf4 repeat\cf3 \
	\cf4 end\cf3  \cf4 tell\cf3 \
	\cf4 return\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3 \
\cf4 end\cf3  \cf10 getPathByAlbum\cf3 \
\

\f0\i \cf2 -- recursive function used by getPathByAlbum()
\f1\i0 \cf3 \
\cf4 on\cf3  \cf10 _getPathByAlbum\cf3 (\cf3 thisFolder\cf3 , \cf3 theAlbum\cf3 , \cf3 thePath\cf3 )\
	\cf4 local\cf3  \cf3 theAlbums\cf3 \
	\cf4 local\cf3  \cf3 thePath\cf3 \
	\cf4 local\cf3  \cf3 thisFolderName\cf3 \
	\cf4 tell\cf3  
\f0\i \cf8 application
\f1\i0 \cf3  \cf7 "Photos"\cf3 \
		\cf4 tell\cf3  \cf3 thisFolder\cf3 \
			\cf4 set\cf3  \cf3 thisFolderName\cf3  \cf4 to\cf3  \cf5 name\cf3  \cf4 of\cf3  \cf3 thisFolder\cf3 \
			\cf4 set\cf3  \cf3 theAlbums\cf3  \cf4 to\cf3  
\f0\i \cf8 albums
\f1\i0 \cf3  \cf4 whose\cf3  \cf5 id\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf5 id\cf3  \cf4 of\cf3  \cf3 theAlbum\cf3 \
			\cf4 if\cf3  \cf3 theAlbums\cf3  \cf4 is\cf3  \cf4 not\cf3  \{\} \cf4 then\cf3 \
				\cf4 return\cf3  \cf3 thisFolderName\cf3  & \cf7 "/"\cf3  & \cf5 name\cf3  \cf4 of\cf3  \cf4 first\cf3  
\f0\i \cf8 item
\f1\i0 \cf3  \cf4 of\cf3  \cf3 theAlbums\cf3 \
			\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 repeat\cf3  \cf4 with\cf3  \cf3 aFolder\cf3  \cf4 in\cf3  
\f0\i \cf8 folders
\f1\i0 \cf3 \
				\cf4 local\cf3  \cf3 folderName\cf3 \
				\cf4 set\cf3  \cf3 folderName\cf3  \cf4 to\cf3  \cf5 name\cf3  \cf4 of\cf3  \cf3 aFolder\cf3 \
				\cf4 tell\cf3  \cf4 me\cf3  \cf4 to\cf3  \cf4 set\cf3  \cf3 thePath\cf3  \cf4 to\cf3  \cf10 _getPathByAlbum\cf3 (\cf3 aFolder\cf3 , \cf3 theAlbum\cf3 , \cf3 thePath\cf3 )\
				\cf4 if\cf3  \cf3 thePath\cf3  \cf4 is\cf3  \cf4 not\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3  \cf4 then\cf3 \
					\cf4 set\cf3  \cf3 thePath\cf3  \cf4 to\cf3  \cf3 thisFolderName\cf3  & \cf7 "/"\cf3  & \cf3 thePath\cf3 \
					\cf4 return\cf3  \cf3 thePath\cf3 \
				\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 end\cf3  \cf4 repeat\cf3 \
		\cf4 end\cf3  \cf4 tell\cf3 \
	\cf4 end\cf3  \cf4 tell\cf3 \
	\cf4 return\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3 \
\cf4 end\cf3  \cf10 _getPathByAlbum\cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \

\f0\i \cf2 -- getAlbumByPath(albumPath, createIfNotExists)
\f1\i0 \cf3 \

\f0\i \cf2 --
\f1\i0 \cf3 \

\f0\i \cf2 -- returns the album for the given path
\f1\i0 \cf3 \

\f0\i \cf2 --
\f1\i0 \cf3 \

\f0\i \cf2 -- if createIfNotExists is true missing folders are created as well as the album
\f1\i0 \cf3 \

\f0\i \cf2 -- format of albumPath: "/folder1/folder2/..../album"
\f1\i0 \cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \
\cf4 on\cf3  \cf10 getAlbumByPath\cf3 (\cf3 albumPath\cf3 , \cf3 createIfNotExists\cf3 )\
	\cf4 try\cf3 \
		\cf4 if\cf3  \cf3 albumPath\cf3  \cf4 is\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3  \cf4 or\cf3  \cf3 albumPath\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf7 ""\cf3  \cf4 then\cf3 \
			\cf4 return\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 set\cf3  \cf3 isValid\cf3  \cf4 to\cf3  \cf10 matchesRegex\cf3 (\cf3 albumPath\cf3 , \cf7 "^(\\\\/[^\\\\/]+)+$"\cf3 )\
		\cf4 if\cf3  \cf4 not\cf3  \cf3 isValid\cf3  \cf4 then\cf3 \
			\cf4 error\cf3  \cf7 "Albumpath "\cf3  & \cf3 albumPath\cf3  & \cf7 " is not a valid path."\cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 set\cf3  \cf3 len\cf3  \cf4 to\cf3  \cf4 the\cf3  \cf5 length\cf3  \cf4 of\cf3  \cf3 albumPath\cf3 \
		\cf4 set\cf3  \cf3 albumPath\cf3  \cf4 to\cf3  
\f0\i \cf8 text
\f1\i0 \cf3  \cf9 2\cf3  \cf4 thru\cf3  \cf3 len\cf3  \cf4 of\cf3  \cf3 albumPath\cf3 \
		\cf4 set\cf3  \cf3 slashOffset\cf3  \cf4 to\cf3  (\cf11 offset\cf3  \cf11 of\cf3  \cf7 "/"\cf3  \cf11 in\cf3  \cf3 albumPath\cf3 )\
		\
		\cf4 set\cf3  \cf3 theFolder\cf3  \cf4 to\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3 \
		\cf4 if\cf3  \cf3 albumPath\cf3  \cf4 is\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3  \cf4 or\cf3  \cf3 albumPath\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf7 ""\cf3  \cf4 then\cf3  \cf4 return\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3 \
		\cf4 tell\cf3  
\f0\i \cf8 application
\f1\i0 \cf3  \cf5 id\cf3  \cf7 "com.apple.photos"\cf3 \
			
\f0\i \cf2 -- go thru all path components of type folder
\f1\i0 \cf3 \
			\cf4 repeat\cf3  \cf4 until\cf3  \cf3 slashOffset\cf3  \cf4 is\cf3  \cf4 less than\cf3  \cf9 1\cf3 \
				
\f0\i \cf2 -- there is at least one folder
\f1\i0 \cf3 \
				\cf4 set\cf3  \cf3 folderName\cf3  \cf4 to\cf3  
\f0\i \cf8 text
\f1\i0 \cf3  \cf9 1\cf3  \cf4 thru\cf3  (\cf3 slashOffset\cf3  - \cf9 1\cf3 ) \cf4 of\cf3  \cf3 albumPath\cf3 \
				\cf4 if\cf3  \cf3 theFolder\cf3  \cf4 is\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3  \cf4 then\cf3 \
					
\f0\i \cf2 --  we are in the root
\f1\i0 \cf3 \
					\cf4 set\cf3  \cf3 allFolders\cf3  \cf4 to\cf3  \cf4 every\cf3  
\f0\i \cf8 folder
\f1\i0 \cf3  \cf4 whose\cf3  \cf5 name\cf3  \cf4 is\cf3  \cf3 folderName\cf3 \
					\cf4 if\cf3  (
\f2\b \cf6 count
\f1\b0 \cf3  \cf4 of\cf3  \cf3 allFolders\cf3 ) \cf4 is\cf3  \cf4 greater than\cf3  \cf9 0\cf3  \cf4 then\cf3 \
						\cf4 set\cf3  \cf3 theFolder\cf3  \cf4 to\cf3  
\f0\i \cf8 item
\f1\i0 \cf3  \cf9 1\cf3  \cf4 of\cf3  \cf3 allFolders\cf3 \
					\cf4 else\cf3 \
						\cf4 if\cf3  \cf3 createIfNotExists\cf3  \cf4 then\cf3 \
							\cf4 set\cf3  \cf3 theFolder\cf3  \cf4 to\cf3  
\f2\b \cf6 make
\f1\b0 \cf3  \cf6 new\cf3  
\f0\i \cf8 folder
\f1\i0 \cf3  \cf6 named\cf3  \cf3 folderName\cf3 \
						\cf4 else\cf3 \
							\cf4 return\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3 \
						\cf4 end\cf3  \cf4 if\cf3 \
					\cf4 end\cf3  \cf4 if\cf3 \
				\cf4 else\cf3 \
					
\f0\i \cf2 -- we are in between folders
\f1\i0 \cf3 \
					\cf4 tell\cf3  \cf3 theFolder\cf3  \cf4 to\cf3  \cf4 set\cf3  \cf3 allFolders\cf3  \cf4 to\cf3  \cf4 every\cf3  
\f0\i \cf8 folder
\f1\i0 \cf3  \cf4 whose\cf3  \cf5 name\cf3  \cf4 is\cf3  \cf3 folderName\cf3 \
					\cf4 if\cf3  (
\f2\b \cf6 count
\f1\b0 \cf3  \cf4 of\cf3  \cf3 allFolders\cf3 ) \cf4 is\cf3  \cf4 greater than\cf3  \cf9 0\cf3  \cf4 then\cf3 \
						\cf4 set\cf3  \cf3 theFolder\cf3  \cf4 to\cf3  
\f0\i \cf8 item
\f1\i0 \cf3  \cf9 1\cf3  \cf4 of\cf3  \cf3 allFolders\cf3 \
					\cf4 else\cf3 \
						\cf4 if\cf3  \cf3 createIfNotExists\cf3  \cf4 then\cf3 \
							\cf4 set\cf3  \cf3 theFolder\cf3  \cf4 to\cf3  
\f2\b \cf6 make
\f1\b0 \cf3  \cf6 new\cf3  
\f0\i \cf8 folder
\f1\i0 \cf3  \cf6 named\cf3  \cf3 folderName\cf3  \cf6 at\cf3  \cf3 theFolder\cf3 \
						\cf4 else\cf3 \
							\cf4 return\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3 \
						\cf4 end\cf3  \cf4 if\cf3 \
					\cf4 end\cf3  \cf4 if\cf3 \
				\cf4 end\cf3  \cf4 if\cf3 \
				\cf4 set\cf3  \cf3 albumPath\cf3  \cf4 to\cf3  
\f0\i \cf8 text
\f1\i0 \cf3  ((\cf11 offset\cf3  \cf11 of\cf3  \cf7 "/"\cf3  \cf11 in\cf3  \cf3 albumPath\cf3 ) + \cf9 1\cf3 ) \cf4 thru\cf3  \cf9 -1\cf3  \cf4 of\cf3  \cf3 albumPath\cf3 \
				\cf4 set\cf3  \cf3 slashOffset\cf3  \cf4 to\cf3  (\cf11 offset\cf3  \cf11 of\cf3  \cf7 "/"\cf3  \cf11 in\cf3  \cf3 albumPath\cf3 )\
			\cf4 end\cf3  \cf4 repeat\cf3 \
			\cf4 if\cf3  \cf3 theFolder\cf3  \cf4 is\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3  \cf4 then\cf3 \
				
\f0\i \cf2 --  we are in the root
\f1\i0 \cf3 \
				\cf4 set\cf3  \cf3 allAlbums\cf3  \cf4 to\cf3  
\f0\i \cf8 albums
\f1\i0 \cf3  \cf4 whose\cf3  \cf5 name\cf3  \cf4 is\cf3  \cf3 albumPath\cf3 \
				\cf4 if\cf3  (
\f2\b \cf6 count
\f1\b0 \cf3  \cf4 of\cf3  \cf3 allAlbums\cf3 ) \cf4 is\cf3  \cf4 greater than\cf3  \cf9 0\cf3  \cf4 then\cf3 \
					\cf4 set\cf3  \cf3 theAlbum\cf3  \cf4 to\cf3  
\f0\i \cf8 item
\f1\i0 \cf3  \cf9 1\cf3  \cf4 of\cf3  \cf3 allAlbums\cf3 \
				\cf4 else\cf3 \
					\cf4 if\cf3  \cf3 createIfNotExists\cf3  \cf4 then\cf3 \
						\cf4 set\cf3  \cf3 theAlbum\cf3  \cf4 to\cf3  
\f2\b \cf6 make
\f1\b0 \cf3  \cf6 new\cf3  
\f0\i \cf8 album
\f1\i0 \cf3  \cf6 named\cf3  \cf3 albumPath\cf3 \
					\cf4 else\cf3 \
						\cf4 return\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3 \
					\cf4 end\cf3  \cf4 if\cf3 \
				\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 else\cf3 \
				
\f0\i \cf2 -- we are in a folder
\f1\i0 \cf3 \
				\cf4 tell\cf3  \cf3 theFolder\cf3  \cf4 to\cf3  \cf4 set\cf3  \cf3 allAlbums\cf3  \cf4 to\cf3  \cf4 every\cf3  
\f0\i \cf8 album
\f1\i0 \cf3  \cf4 whose\cf3  \cf5 name\cf3  \cf4 is\cf3  \cf3 albumPath\cf3 \
				\cf4 if\cf3  (
\f2\b \cf6 count
\f1\b0 \cf3  \cf4 of\cf3  \cf3 allAlbums\cf3 ) \cf4 is\cf3  \cf4 greater than\cf3  \cf9 0\cf3  \cf4 then\cf3 \
					\cf4 set\cf3  \cf3 theAlbum\cf3  \cf4 to\cf3  
\f0\i \cf8 item
\f1\i0 \cf3  \cf9 1\cf3  \cf4 of\cf3  \cf3 allAlbums\cf3 \
				\cf4 else\cf3 \
					\cf4 if\cf3  \cf3 createIfNotExists\cf3  \cf4 then\cf3 \
						\cf4 set\cf3  \cf3 theAlbum\cf3  \cf4 to\cf3  
\f2\b \cf6 make
\f1\b0 \cf3  \cf6 new\cf3  
\f0\i \cf8 album
\f1\i0 \cf3  \cf6 named\cf3  \cf3 albumPath\cf3  \cf6 at\cf3  \cf3 theFolder\cf3 \
					\cf4 else\cf3 \
						\cf4 return\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3 \
					\cf4 end\cf3  \cf4 if\cf3 \
				\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 end\cf3  \cf4 tell\cf3 \
	\cf4 on\cf3  \cf4 error\cf3  \cf3 e\cf3 \
		\cf4 error\cf3  \cf7 "Can't get album for path "\cf3  & \cf3 albumPath\cf3  & \cf7 ". Error was: "\cf3  & \cf3 e\cf3 \
	\cf4 end\cf3  \cf4 try\cf3 \
	\cf4 return\cf3  \cf3 theAlbum\cf3 \
	\
\cf4 end\cf3  \cf10 getAlbumByPath\cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \

\f0\i \cf2 -- spotlightTargetAlbum(session)
\f1\i0 \cf3 \

\f0\i \cf2 --
\f1\i0 \cf3 \

\f0\i \cf2 --  activates import album
\f1\i0 \cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \
\cf4 on\cf3  \cf10 spotlightTargetAlbum\cf3 (\cf3 session\cf3 )\
	\cf4 set\cf3  \cf3 targetAlbum\cf3  \cf4 to\cf3  \cf10 getAlbumByPath\cf3 (\cf3 albumName\cf3  \cf4 of\cf3  \cf3 session\cf3 , \cf5 false\cf3 )\
	\cf4 tell\cf3  
\f0\i \cf8 application
\f1\i0 \cf3  \cf5 id\cf3  \cf7 "com.apple.photos"\cf3 \
		\cf4 if\cf3  \cf3 targetAlbum\cf3  \cf4 is\cf3  \cf4 not\cf3  
\f0\i \cf8 missing value
\f1\i0 \cf3  \cf4 then\cf3 \
			\cf4 tell\cf3  \cf3 targetAlbum\cf3 \
				
\f2\b \cf6 spotlight
\f1\b0 \cf3 \
			\cf4 end\cf3  \cf4 tell\cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
	\cf4 end\cf3  \cf4 tell\cf3 \
\cf4 end\cf3  \cf10 spotlightTargetAlbum\cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \

\f0\i \cf2 -- testImport
\f1\i0 \cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \
\cf4 on\cf3  \cf10 testImport\cf3 ()\
	
\f0\i \cf2 -- set targetAlbum to getAlbumByPath("/Test/Test3/Test4/Yield4", false)
\f1\i0 \cf3 \
	\cf4 set\cf3  \cf3 targetAlbum\cf3  \cf4 to\cf3  \cf10 getAlbumByPath\cf3 (\cf7 "/Test/Test3/Test4/Test5/Test6/Yield7"\cf3 , \cf5 false\cf3 )\
	
\f0\i \cf2 -- set targetAlbum to getAlbumByPath("/Yield0", false)
\f1\i0 \cf3 \
	
\f0\i \cf2 -- set targetAlbum to getAlbumByPath("/Test/Yield2", false)
\f1\i0 \cf3 \
	\
	\
	\cf4 local\cf3  \cf3 thePath\cf3 \
	\cf4 set\cf3  \cf3 thePath\cf3  \cf4 to\cf3  \cf10 getPathByAlbum\cf3 (\cf3 targetAlbum\cf3 )\
	\cf4 set\cf3  \cf3 dummy\cf3  \cf4 to\cf3  \cf9 0\cf3 \
\cf4 end\cf3  \cf10 testImport\cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \

\f0\i \cf2 -- Run the import script
\f1\i0 \cf3 \

\f0\i \cf2 -------------------------------------------------------------------------------
\f1\i0 \cf3 \
\cf4 on\cf3  
\f2\b \cf6 run
\f1\b0 \cf3  \cf3 argv\cf3 \
	
\f0\i \cf2 -- testImport()
\f1\i0 \cf3 \
	
\f0\i \cf2 -- return
\f1\i0 \cf3 \
	\
	\cf4 if\cf3  (\cf3 argv\cf3  = \cf4 me\cf3 ) \cf4 then\cf3 \
		\cf4 set\cf3  \cf3 argv\cf3  \cf4 to\cf3  \{\cf7 "/private/tmp/at.homebrew.lrphotos/Test/Yield2, Yield2.1"\cf3 \}\
	\cf4 end\cf3  \cf4 if\cf3 \
	
\f0\i \cf2 -- Read the directory from the input and define the session file
\f1\i0 \cf3 \
	\cf4 set\cf3  \cf3 tempFolder\cf3  \cf4 to\cf3  
\f0\i \cf8 item
\f1\i0 \cf3  \cf9 1\cf3  \cf4 of\cf3  \cf3 argv\cf3 \
	\
	\cf4 set\cf3  \cf3 sessionFile\cf3  \cf4 to\cf3  
\f0\i \cf8 POSIX file
\f1\i0 \cf3  (\cf3 tempFolder\cf3  & \cf7 "/session.txt"\cf3 )\
	\cf11 open for access\cf3  \cf3 sessionFile\cf3 \
	\cf4 local\cf3  \cf3 sessionContents\cf3 \
	\cf4 set\cf3  \cf3 sessionContents\cf3  \cf4 to\cf3  (\cf11 read\cf3  \cf3 sessionFile\cf3  \cf11 as\cf3  \'ab
\f0\i \cf8 class
\f1\i0 \cf3  \cf9 utf8\cf3 \'bb)\
	\cf11 close access\cf3  \cf3 sessionFile\cf3 \
	\
	\cf4 local\cf3  \cf3 session\cf3 \
	\cf4 set\cf3  \cf3 session\cf3  \cf4 to\cf3  \cf10 getSession\cf3 (\cf3 sessionContents\cf3 )\
	\cf4 set\cf3  \cf3 hasErrors\cf3  \cf4 of\cf3  \cf3 session\cf3  \cf4 to\cf3  \cf5 false\cf3 \
	\cf4 try\cf3 \
		\cf4 if\cf3  \cf3 mode\cf3  \cf4 of\cf3  \cf3 session\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf7 ""\cf3  \cf4 then\cf3 \
			\cf4 error\cf3  \cf7 "Mode is not set."\cf3 \
		\cf4 else\cf3 \
			\cf4 set\cf3  \cf3 photosFile\cf3  \cf4 to\cf3  \cf3 tempFolder\cf3  & \cf7 "/photos.txt"\cf3 \
			\cf11 open for access\cf3  \cf3 photosFile\cf3  \cf4 as\cf3  \'ab
\f0\i \cf8 class
\f1\i0 \cf3  \cf9 utf8\cf3 \'bb\
			\cf4 set\cf3  \cf3 photosContents\cf3  \cf4 to\cf3  (\cf11 read\cf3  \cf3 photosFile\cf3 )\
			\cf11 close access\cf3  \cf3 photosFile\cf3 \
			\cf4 local\cf3  \cf3 photoDescriptors\cf3 \
			\cf4 set\cf3  \cf3 photoDescriptors\cf3  \cf4 to\cf3  \cf10 getPhotoDescriptors\cf3 (\cf3 photosContents\cf3 )\
			\cf4 if\cf3  \cf3 mode\cf3  \cf4 of\cf3  \cf3 session\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf7 "publish"\cf3  \cf4 then\cf3 \
				\cf4 set\cf3  \cf3 importedPhotos\cf3  \cf4 to\cf3  \cf10 import\cf3 (\cf3 photoDescriptors\cf3 , \cf3 session\cf3 )\
				\cf4 if\cf3  (
\f2\b \cf6 count
\f1\b0 \cf3  \cf4 of\cf3  \cf3 importedPhotos\cf3 ) \cf4 is\cf3  \cf4 equal to\cf3  \cf9 0\cf3  \cf4 then\cf3 \
					\cf4 error\cf3  \cf7 "Unknown error. No photos were not imported."\cf3 \
				\cf4 end\cf3  \cf4 if\cf3 \
				\
				\cf10 updatePhotosFile\cf3 (\cf3 photosFile\cf3 , \cf3 importedPhotos\cf3 )\
			\cf4 else\cf3 \
				\cf4 if\cf3  \cf3 mode\cf3  \cf4 of\cf3  \cf3 session\cf3  \cf4 is\cf3  \cf4 equal to\cf3  \cf7 "remove"\cf3  \cf4 then\cf3 \
					\cf4 set\cf3  \cf3 removedPhotos\cf3  \cf4 to\cf3  \cf10 remove\cf3 (\cf3 photoDescriptors\cf3 , \cf3 session\cf3 )\
					\cf10 updatePhotosFile\cf3 (\cf3 photosFile\cf3 , \cf3 removedPhotos\cf3 )\
				\cf4 else\cf3 \
					\cf4 error\cf3  \cf7 "The value for mode is not valid: "\cf3  & \cf3 mode\cf3  \cf4 of\cf3  \cf3 session\cf3 \
				\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
	\cf4 on\cf3  \cf4 error\cf3  \cf3 e\cf3 \
		\cf4 set\cf3  \cf3 hasErrors\cf3  \cf4 of\cf3  \cf3 session\cf3  \cf4 to\cf3  \cf5 true\cf3 \
		\cf4 set\cf3  \cf3 errorMsg\cf3  \cf4 of\cf3  \cf3 session\cf3  \cf4 to\cf3  \cf3 e\cf3 \
		\cf10 updateSessionFile\cf3 (\cf3 sessionFile\cf3 , \cf3 session\cf3 )\
		\cf4 return\cf3 \
	\cf4 end\cf3  \cf4 try\cf3 \
	
\f0\i \cf2 --
\f1\i0 \cf3 \
	\cf10 spotlightTargetAlbum\cf3 (\cf3 session\cf3 )\
	\
	\cf10 updateSessionFile\cf3 (\cf3 sessionFile\cf3 , \cf3 session\cf3 )\
	\
\cf4 end\cf3  
\f2\b \cf6 run
\f1\b0 \cf3 \
}